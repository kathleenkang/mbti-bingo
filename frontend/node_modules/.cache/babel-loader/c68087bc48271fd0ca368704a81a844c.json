{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js\";\nimport BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\"; // import mbtiimg from `../images/${realMbti}.png`;\n// const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResultsPage() {\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(localStorage.getItem(\"mistypeBoardArray\")); // let testByRankArray = [\n  //   { mbti: \"INFP\", count: \"18\" },\n  //   { mbti: \"ISFJ\", count: \"16\" },\n  //   { mbti: \"ENFP-Fi\", count: \"12\" },\n  //   { mbti: \"ISFP\", count: \"11\" },\n  // ];\n  // 이거 대신 mistypeboardarray 안에 있는 id 사용하는 게 낫나?\n\n  let myMistypesIds = myMistypes.map(item => item.id); // // 준우 test data (원래 예상대로인 케이스)\n  // const testMistypeCountArray = [12, 11, 16];\n  // // 내 test data (알고보니 다른 케이스)\n  // const myMbtiCount = 15;\n  // const testMistypeCountArray = [17, 8, 9];\n  // test data (두가지 선택개수가 똑같은 케이스)\n\n  let trueCount = board => {\n    let count = 0;\n\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n\n    return count;\n  }; // // trueCount map으로 쓰는 법\n  // console.log(\n  //   myMbtiBoard\n  //     .map((row) => row.filter(Boolean).length)\n  //     .reduce((a, b) => a + b, 0)\n  // );\n\n\n  let myMbtiCount = trueCount(myMbtiBoard);\n  let mistypeCount = mistypeBoardArray.map(item => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board)\n    };\n  }); // let mistypeReason = myMistypes.map((item) => item.reason);\n  // console.log(mistypeReason);\n\n  let mbtiRanking = [...mistypeCount, {\n    id: myMbti,\n    count: trueCount(myMbtiBoard)\n  }].sort((a, b) => {\n    return b.count - a.count;\n  }); // 1등한 유형을 realmbti로 놓고\n\n  const realMbti = mbtiRanking[0].id;\n  const realMbtiCount = mbtiRanking[0].count; // when mymbti != realmbti ===>\n  // when\n  // let addMistypeCount = (mistypeBoardArray) => {\n  //   let newMistypeBoardArray = [...mistypeBoardArray];\n  //   newMistypeBoardArray.map((board) => {\n  //     board.push(trueCount(board));\n  //   });\n  //   return newMistypeBoardArray;\n  // };\n  // console.log(addMistypeCount);\n  // let addCount = (array) => {\n  //   let newArray = [...array];\n  //   newArray.map((item) => {item.push([item.count]: trueCount(item.board))\n  //   })\n  //   return newArray\n  // }\n  // let checkType = (myMbtiCount, realMbtiCount) => {\n  //   switch (true) {\n  //     case myMbtiCount - 5 > realMbtiCount:\n  //       \"뒷구르기 하면서 봐도\";\n  //       break;\n  //     case myMbtiCount == realMbtiCount:\n  //       `${myMbti} + 또는 `;\n  //     default:\n  //       \"아마도\";\n  //   }\n  // };\n  // let checkType = (myMbtiCount, realMbtiCount) => {\n  //   if (myMbtiCount - 5 > realMbtiCount) {\n  //     return \"뒷구르기 하면서 봐도\";\n  //   } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n  //     return `${myMbti} 또는 `;\n  //   } else if (myMbtiCount < realMbtiCount) {\n  //     return `사실 ${myMbti}가 아니라 `;\n  //   } else {\n  //     return \"아마도\";\n  //   }\n  // };\n\n  let checkType = (myName, myMbti, realMbti, myMbtiCount, realMbtiCount) => {\n    if (myMbtiCount - 5 > realMbtiCount) {\n      return `${myMbti}가 ${myMbtiCount}개로 압도적으로 많았어요! ${myName}님은 앞구르기 뒷구르기 하면서 봐도 여지 없는 ${myMbti}! `;\n    } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n      return `${myMbti}와 ${realMbti} 빙고판에서 모두 동일하게 ${myMbtiCount}개 선택했어요. 알고 보니 ${realMbti}일 수도...?`;\n    } else if (myMbtiCount < realMbtiCount) {\n      return `각 빙고판에서 ${myMbti}는 ${myMbtiCount}개, ${realMbti.slice(0, 4)}는 ${realMbtiCount}개 선택했어요. 알고 보면 ${myName}님은 ${myMbti}보다 ${realMbti}의 성향에 더 가깝다는\n      것!`;\n    } else {\n      return `${myMbtiCount}개로 ${myMbti} 빙고판의 선택 개수가 가장 많았어요. ${myName}님은 원래 예상대로 ${myMbti}일 확률이 높네요`;\n    }\n  };\n\n  let renderMistypeRevealItem = (item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistype-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-title\",\n        children: [\"MYSTERY BINGO #\", i + 1, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mbti accent highlight\",\n          children: mistypeBoardArray[i].mbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-bingo\",\n        children: /*#__PURE__*/_jsxDEV(BingoBoard, {\n          mbti: mistypeBoardArray[i].mbti.slice(0, 4),\n          board: mistypeBoardArray[i].board,\n          show: true,\n          disableClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-reason\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          myMbti: myMbti,\n          mistype: mistypeBoardArray[i].mbti // reason={myMistypes[myMistypes.indexOf({ mistypeBoardArray[i].mbti })].reason}\n          ,\n          myMistypes: myMistypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: myName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), \"\\uB2D8\\uC758\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent highlight\",\n          children: \"\\uC9C4\\uC9DC MBTI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), \"\\uB294\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"myrealmbti accent highlight\",\n          children: realMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), \" \\uC785\\uB2C8\\uB2E4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`../images/${realMbti.toLowerCase().slice(0, 4)}.png`),\n        width: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-summary\",\n        children: checkType(myName, myMbti, realMbti, myMbtiCount, realMbtiCount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranking\",\n        children: /*#__PURE__*/_jsxDEV(RankingBoard, {\n          ranking: mbtiRanking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mystery-reveal-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDD2E \\uBBF8\\uC2A4\\uD14C\\uB9AC \\uBE59\\uACE0\\uC758 \\uC815\\uCCB4\\uB97C \\uACF5\\uAC1C\\uD569\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [myMbti, \"\\uB4E4\\uC740 \\uC885\\uC885\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mistype-names\",\n          children: myMistypesIds.join(\", \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), \"\\uB4E4\\uACFC \\uD63C\\uB3D9\\uB418\\uAE30\\uB3C4 \\uD574\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), mistypeBoardArray.map(renderMistypeRevealItem)]\n  }, void 0, true);\n}\n\n_c = ResultsPage;\nexport default ResultsPage;\n{\n  /* <td>\n          <div className=\"img-container\">\n            <img className=\"top\" src={`images/${realMbti}.png`} width=\"80%\" />\n            <img className=\"bottom\" src={\"images/circle.png\"} width=\"80%\" />\n          </div>\n        </td> */\n}\n{\n  /* <div className=\"result-count\">\n          각 빙고판에서 {myMbti}는 {myMbtiCount}개, <br />\n          {realMbti}는 {realMbtiCount}개 선택했어요. <br />\n        </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js"],"names":["BingoBoard","Accordion","RankingBoard","ResultsPage","myName","localStorage","getItem","myMbti","myMbtiBoard","JSON","parse","myMistypes","mistypeBoardArray","myMistypesIds","map","item","id","trueCount","board","count","i","length","filter","Boolean","myMbtiCount","mistypeCount","mbti","mbtiRanking","sort","a","b","realMbti","realMbtiCount","checkType","slice","renderMistypeRevealItem","require","toLowerCase","join"],"mappings":"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","sourcesContent":["import BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\";\n\n// import mbtiimg from `../images/${realMbti}.png`;\n\n// const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nfunction ResultsPage() {\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(\n    localStorage.getItem(\"mistypeBoardArray\")\n  );\n\n  // let testByRankArray = [\n  //   { mbti: \"INFP\", count: \"18\" },\n  //   { mbti: \"ISFJ\", count: \"16\" },\n  //   { mbti: \"ENFP-Fi\", count: \"12\" },\n  //   { mbti: \"ISFP\", count: \"11\" },\n  // ];\n\n  // 이거 대신 mistypeboardarray 안에 있는 id 사용하는 게 낫나?\n  let myMistypesIds = myMistypes.map((item) => item.id);\n\n  // // 준우 test data (원래 예상대로인 케이스)\n  // const testMistypeCountArray = [12, 11, 16];\n\n  // // 내 test data (알고보니 다른 케이스)\n  // const myMbtiCount = 15;\n  // const testMistypeCountArray = [17, 8, 9];\n\n  // test data (두가지 선택개수가 똑같은 케이스)\n\n  let trueCount = (board) => {\n    let count = 0;\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n    return count;\n  };\n\n  // // trueCount map으로 쓰는 법\n  // console.log(\n  //   myMbtiBoard\n  //     .map((row) => row.filter(Boolean).length)\n  //     .reduce((a, b) => a + b, 0)\n  // );\n\n  let myMbtiCount = trueCount(myMbtiBoard);\n\n  let mistypeCount = mistypeBoardArray.map((item) => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board),\n    };\n  });\n\n  // let mistypeReason = myMistypes.map((item) => item.reason);\n  // console.log(mistypeReason);\n\n  let mbtiRanking = [\n    ...mistypeCount,\n    {\n      id: myMbti,\n      count: trueCount(myMbtiBoard),\n    },\n  ].sort((a, b) => {\n    return b.count - a.count;\n  });\n\n  // 1등한 유형을 realmbti로 놓고\n  const realMbti = mbtiRanking[0].id;\n  const realMbtiCount = mbtiRanking[0].count;\n\n  // when mymbti != realmbti ===>\n\n  // when\n\n  // let addMistypeCount = (mistypeBoardArray) => {\n  //   let newMistypeBoardArray = [...mistypeBoardArray];\n  //   newMistypeBoardArray.map((board) => {\n  //     board.push(trueCount(board));\n  //   });\n  //   return newMistypeBoardArray;\n  // };\n\n  // console.log(addMistypeCount);\n\n  // let addCount = (array) => {\n  //   let newArray = [...array];\n  //   newArray.map((item) => {item.push([item.count]: trueCount(item.board))\n  //   })\n  //   return newArray\n  // }\n\n  // let checkType = (myMbtiCount, realMbtiCount) => {\n  //   switch (true) {\n  //     case myMbtiCount - 5 > realMbtiCount:\n  //       \"뒷구르기 하면서 봐도\";\n  //       break;\n  //     case myMbtiCount == realMbtiCount:\n  //       `${myMbti} + 또는 `;\n  //     default:\n  //       \"아마도\";\n  //   }\n  // };\n\n  // let checkType = (myMbtiCount, realMbtiCount) => {\n  //   if (myMbtiCount - 5 > realMbtiCount) {\n  //     return \"뒷구르기 하면서 봐도\";\n  //   } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n  //     return `${myMbti} 또는 `;\n  //   } else if (myMbtiCount < realMbtiCount) {\n  //     return `사실 ${myMbti}가 아니라 `;\n  //   } else {\n  //     return \"아마도\";\n  //   }\n  // };\n\n  let checkType = (myName, myMbti, realMbti, myMbtiCount, realMbtiCount) => {\n    if (myMbtiCount - 5 > realMbtiCount) {\n      return `${myMbti}가 ${myMbtiCount}개로 압도적으로 많았어요! ${myName}님은 앞구르기 뒷구르기 하면서 봐도 여지 없는 ${myMbti}! `;\n    } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n      return `${myMbti}와 ${realMbti} 빙고판에서 모두 동일하게 ${myMbtiCount}개 선택했어요. 알고 보니 ${realMbti}일 수도...?`;\n    } else if (myMbtiCount < realMbtiCount) {\n      return `각 빙고판에서 ${myMbti}는 ${myMbtiCount}개, ${realMbti.slice(\n        0,\n        4\n      )}는 ${realMbtiCount}개 선택했어요. 알고 보면 ${myName}님은 ${myMbti}보다 ${realMbti}의 성향에 더 가깝다는\n      것!`;\n    } else {\n      return `${myMbtiCount}개로 ${myMbti} 빙고판의 선택 개수가 가장 많았어요. ${myName}님은 원래 예상대로 ${myMbti}일 확률이 높네요`;\n    }\n  };\n\n  let renderMistypeRevealItem = (item, i) => {\n    return (\n      <div className=\"mistype-container\">\n        <div className=\"mistype-title\">\n          MYSTERY BINGO #{i + 1}\n          <span className=\"mbti accent highlight\">\n            {mistypeBoardArray[i].mbti}\n          </span>\n        </div>\n        <div className=\"mistype-bingo\">\n          <BingoBoard\n            mbti={mistypeBoardArray[i].mbti.slice(0, 4)}\n            board={mistypeBoardArray[i].board}\n            show={true}\n            disableClick={true}\n          />\n        </div>\n        <div className=\"mistype-reason\">\n          <Accordion\n            myMbti={myMbti}\n            mistype={mistypeBoardArray[i].mbti}\n            // reason={myMistypes[myMistypes.indexOf({ mistypeBoardArray[i].mbti })].reason}\n            myMistypes={myMistypes}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* conditional rendering. if myMbti !== realMbti */}\n\n      <div className=\"result\">\n        <div className=\"headline\">\n          <span className=\"name\">{myName}</span>님의{\" \"}\n          <span className=\"accent highlight\">진짜 MBTI</span>는<br></br>\n          <span className=\"myrealmbti accent highlight\">{realMbti}</span> 입니다\n        </div>\n        <img\n          src={require(`../images/${realMbti.toLowerCase().slice(0, 4)}.png`)}\n          width=\"300px\"\n        />\n\n        <div className=\"result-summary\">\n          {/* {myName}님은 {typeText} {realMbti}! */}\n          {/* {myName}님은 {checkType(myMbtiCount, realMbtiCount)} {realMbti}! */}\n          {/* {checkType(myMbtiCount, realMbtiCount)} */}\n          {/* {checkType(myName, myMbti, realMbti, myMbtiCount, realMbtiCount)} */}\n          {checkType(myName, myMbti, realMbti, myMbtiCount, realMbtiCount)}\n          {/* 알고 보면 {myName} 님은 {myMbti}보다 {realMbti}의 성향에 더 가깝다는\n          것! */}\n        </div>\n\n        <div className=\"ranking\">\n          <RankingBoard ranking={mbtiRanking} />\n        </div>\n      </div>\n\n      <div className=\"mystery-reveal-title\">\n        <p>🔮 미스테리 빙고의 정체를 공개합니다!</p>\n        <div>\n          {myMbti}들은 종종{\" \"}\n          <span className=\"mistype-names\">{myMistypesIds.join(\", \")}</span>들과\n          혼동되기도 해요.\n        </div>\n      </div>\n\n      {mistypeBoardArray.map(renderMistypeRevealItem)}\n    </>\n  );\n}\n\nexport default ResultsPage;\n\n{\n  /* <td>\n          <div className=\"img-container\">\n            <img className=\"top\" src={`images/${realMbti}.png`} width=\"80%\" />\n            <img className=\"bottom\" src={\"images/circle.png\"} width=\"80%\" />\n          </div>\n        </td> */\n}\n\n{\n  /* <div className=\"result-count\">\n          각 빙고판에서 {myMbti}는 {myMbtiCount}개, <br />\n          {realMbti}는 {realMbtiCount}개 선택했어요. <br />\n        </div> */\n}\n"]},"metadata":{},"sourceType":"module"}