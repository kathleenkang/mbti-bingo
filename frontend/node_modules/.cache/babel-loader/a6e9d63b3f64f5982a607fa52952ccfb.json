{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js\",\n    _s = $RefreshSig$();\n\nimport BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\";\nimport downarrow from \"../images/downarrow.png\";\nimport definite from \"../images/definite.gif\";\nimport likely from \"../images/likely.gif\";\nimport tie from \"../images/tie.gif\";\nimport surprise from \"../images/surprise.gif\";\nimport { typeImplementation } from \"@testing-library/user-event/dist/type/typeImplementation\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Typewriter } from \"react-simple-typewriter\";\nimport { type } from \"@testing-library/user-event/dist/type\"; // const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResultsPage() {\n  _s();\n\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(localStorage.getItem(\"mistypeBoardArray\"));\n  const [showTransition, setShowTransition] = useState(true);\n  setTimeout(() => {\n    setShowTransition(false);\n  }, 2000); // 예전 mistypedata ver.\n  // let myMistypesIds = myMistypes.map((item) => item.id);\n  // localStorage.setItem(\n  //   \"mistypeBoardArray\",\n  //   JSON.stringify(\n  //     myMistypes.map((mistype, i) => {\n  //       return {\n  //         mbti: mistype.id,\n  //         board: boardArray[i],\n  //       };\n\n  let trueCount = board => {\n    let count = 0;\n\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n\n    return count;\n  }; // // trueCount map으로 쓰는 법\n  // console.log(\n  //   myMbtiBoard\n  //     .map((row) => row.filter(Boolean).length)\n  //     .reduce((a, b) => a + b, 0)\n  // );\n\n\n  let myMbtiCount = trueCount(myMbtiBoard); // 예전 mistypesdata ver.\n\n  let mistypeCount = mistypeBoardArray.map((item, i) => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board)\n    };\n  });\n  let sortByCount = [...mistypeCount, {\n    id: myMbti,\n    count: trueCount(myMbtiBoard)\n  }].sort((a, b) => {\n    return b.count - a.count;\n  }); // 각 object에 ranking이라는 property attribute 추가하기\n\n  let addRanking = sortByCount.map((obj, i) => {\n    return {\n      ranking: i + 1,\n      ...obj\n    };\n  }); // 앞 object와 value 비교해서 같으면 같은 등수로 바꿔주기\n\n  for (let i = 1; i < typeImplementation.length; i++) {\n    if (addRanking[i].count == addRanking[i - 1].count) {\n      addRanking[i].ranking = addRanking[i - 1].ranking;\n    }\n  } // 1등한 유형을 realmbti로 놓기\n\n\n  let firstPlaceArray = addRanking.filter(obj => obj.ranking === 1);\n  let realMbtiArray = firstPlaceArray.map(obj => obj.id);\n  let realMbtiShortArray = firstPlaceArray.map(obj => obj.id.slice(0, 4)); // let realMbtiShortArrayWithoutOriginal = firstPlaceArray\n  //   .filter((obj) => obj.id != myMbti)\n  //   .flatMap((obj) => obj.id.slice(0, 4));\n\n  let realMbtiShortArrayWithoutOriginal = firstPlaceArray.flatMap(obj => obj.id != myMbti ? [obj.id.slice(0, 4)] : []);\n  let realMbtiCount = firstPlaceArray[0].count; // 얘넨 왜 안 됐을까?\n  // let realMbtiCount = firstPlaceArray.map((obj) => obj.count).join(\"\"));\n  // let realMbtiCount = firstPlaceArray.map((obj) => obj.count).toString();\n  // THIS WORKS BUT ERROR: TOO MANY RERENDERS\n  // let [type, setType] = useState(\"\");\n  // if (myMbtiCount - 5 > realMbtiCount) {\n  //   setType(\"definite\");\n  // } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n  //   setType(\"tie\");\n  // } else if (myMbtiCount < realMbtiCount) {\n  //   setType(\"surprise\");\n  // } else if (myMbtiCount > realMbtiCount) {\n  //   setType(\"likely\");\n  // }\n\n  let type = \"\";\n\n  if (myMbtiCount - 5 > realMbtiCount) {\n    type = \"definite\"; // } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n  } else if (realMbtiArray.filter(e => !e.includes(myMbti)) && myMbtiCount == realMbtiCount) {\n    type = \"tie\";\n  } else if (myMbtiCount < realMbtiCount) {\n    type = \"surprise\";\n  } else if (myMbtiCount > realMbtiCount) {\n    type = \"likely\";\n  } // let whichType = addRanking.map((obj, i) => {\n  //   if (obj.ranking)\n  //   return type;\n  // });\n  //   let firstPlaceArray = addRanking.filter((obj) => obj.ranking === 1);\n  //  if (myMbti in firstPlaceArray && firstPlaceArray.length === 1 && ) {\n  //  }\n  // type = \"tie\";\n\n\n  let renderResultSummary = (myMbti, realMbtiShortArray, // 왜 오히려 realMbtiShortArrayWithoutOriginal을 넣으면 의도대로 안 나오는 거지?\n  myMbtiCount, realMbtiCount, type) => {\n    // definite\n    if (type === \"definite\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: myMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), \"\\uAC00\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: [myMbtiCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), \"\\uB85C \\uC555\\uB3C4\\uC801\\uC73C\\uB85C \\uB9CE\\uC558\\uC5B4\\uC694!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this);\n    } // tie\n    else if (type === \"tie\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: myMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), \"\\uC640\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: realMbtiShortArrayWithoutOriginal.join(\" & \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), \" \", \"\\uBE59\\uACE0\\uD310\\uC5D0\\uC11C \\uBAA8\\uB450 \\uB3D9\\uC77C\\uD558\\uAC8C\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: [myMbtiCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), \" \\uC120\\uD0DD\\uD588\\uC5B4\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this);\n    } // surprise\n    else if (type === \"surprise\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-line\",\n        children: [\"\\uC6D0\\uB798 MBTI\\uC778 \\uC904 \\uC54C\\uC558\\uB358 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: myMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 26\n        }, this), \"\\uC758 \\uBE59\\uACE0\\uC5D0\\uC11C\\uB294 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: [myMbtiCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), \"\\uB97C \\uC120\\uD0DD\\uD55C \\uBC18\\uBA74,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: realMbtiShortArrayWithoutOriginal.join(\" & \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), \" \", \"\\uBE59\\uACE0\\uC5D0\\uC11C\\uB294 \\uADF8\\uBCF4\\uB2E4 \\uB354 \\uB9CE\\uC740\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: [realMbtiCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), \"\\uB97C \\uC120\\uD0DD\\uD588\\uC5B4\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this);\n    } // likely\n    else if (type === \"likely\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: [myMbtiCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), \"\\uB85C\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent color\",\n          children: myMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), \" \\uBE59\\uACE0\\uD310\\uC758 \\uC120\\uD0DD \\uAC1C\\uC218\\uAC00 \\uAC00\\uC7A5 \\uB9CE\\uC558\\uC5B4\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  let renderReaction = (myMbti, realMbtiShortArray, type) => {\n    // definite\n    if (type === \"definite\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: definite,\n          loop: \"infinite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-text accent highlight\",\n          children: [\"\\uC55E\\uAD6C\\uB974\\uAE30 \\uB4B7\\uAD6C\\uB974\\uAE30\\uD558\\uBA74\\uC11C \\uBD10\\uB3C4 \", myMbti]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this);\n    } // tie\n    else if (type === \"tie\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-text accent highlight\",\n          children: [\"\\uB0B4 \\uC548\\uC5D0 \\uC2F8\\uC6B0\\uACE0 \\uC788\\uB294 \", firstPlaceArray.length, \"\\uAC1C\\uC758 \\uC790\\uC544\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), \" \\uB098...\\uC5B4\\uCA4C\\uBA74 \", realMbtiShortArrayWithoutOriginal.join(\" or \"), \"\\uC77C\\uC9C0\\uB3C4...?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this);\n    } // surprise\n    else if (type === \"surprise\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: surprise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-text accent highlight\",\n          children: [\"\\uD55C\\uD3C9\\uC0DD \", myMbti, \"\\uB85C \\uC0B4\\uC544\\uC628 \\uB0B4\\uAC00 \\uC0AC\\uC2E4\\uC740\", \" \", realMbtiShortArray.join(\" or \"), \"...?!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this);\n    } // likely\n    else if (type === \"likely\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: likely\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-text accent highlight\",\n          children: [\"MBTI\\uB294 \\uACFC\\uD559\\uC774\\uB2E4\\u2014 \\uC544\\uBB34\\uB798\\uB3C4 \", myMbti, \" \\uB9DE\\uB294 \\uB4EF~!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  function originalBingoTitle(type) {\n    switch (type) {\n      case \"surprise\":\n        return \"나의 MBTI(였던 것)\";\n        break;\n\n      case \"tie\":\n        return \"나의 MBTI(일 수도~ 아닐 수도~)\";\n        break;\n\n      default:\n        return \"나의 MBTI 빙고\";\n    }\n  }\n\n  let renderMistypeRevealItem = (item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistype-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mistype-title\",\n        children: [\"MYSTERY BINGO #\", i + 1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mbti accent highlight\",\n        children: mistypeBoardArray[i].mbti\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-bingo\",\n        children: /*#__PURE__*/_jsxDEV(BingoBoard, {\n          mbti: mistypeBoardArray[i].mbti.slice(0, 4),\n          board: mistypeBoardArray[i].board,\n          show: true,\n          disableClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-reason\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          myMbti: myMbti,\n          mistype: mistypeBoardArray[i].mbti,\n          myMistypes: myMistypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  };\n\n  let renderTransition = () => {\n    if (!showTransition) {\n      return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transition\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed-text\",\n        children: \"\\uACFC\\uC5F0 \\uB098\\uC758 \\uC9C4\\uC9DC MBTI\\uB294 \\uBB58\\uAE4C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typewriter\",\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          loop: \"1\",\n          cursor: true,\n          cursorStyle: \"\",\n          typeSpeed: 70,\n          deleteSpeed: 50,\n          delaySpeed: 1000,\n          words: [\"두구두구두구두구...!\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this);\n  };\n\n  {\n    /* <img\n          src={require(`../images/${realMbti.toLowerCase().slice(0, 4)}.png`)}\n          width=\"300px\"\n        /> */\n  } // let renderMbtiImage = () => {\n  //   for (let i = 0; i <= realMbtiShortArray.length; i++) {\n  //     console.log(realMbtiShortArray.length);\n  //     console.log(i);\n  //     console.log(`../images/${realMbtiShortArray[i].toLowerCase()}.png`);\n  //     return (\n  //       <img\n  //         src={require(`../images/${realMbtiShortArray[i].toLowerCase()}.png`)}\n  //         width=\"50px\"\n  //       />\n  //     );\n  //   }\n  // };\n\n  let renderMbtiImage = () => {\n    realMbtiShortArray.map(mbti => {\n      console.log(mbti);\n      console.log(`../images/${mbti.toLowerCase()}.png`);\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`../images/${mbti.toLowerCase()}.png`),\n        width: \"100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderTransition(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: myName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), \"\\uB2D8\\uC758\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent highlight\",\n          children: \"\\uC9C4\\uC9DC MBTI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), \"\\uB294\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mbti-img\",\n          children: renderMbtiImage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-summary\",\n        children: renderResultSummary(myMbti, realMbtiShortArray, myMbtiCount, realMbtiCount, type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranking\",\n        children: /*#__PURE__*/_jsxDEV(RankingBoard, {\n          ranking: addRanking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction\",\n        children: renderReaction(myMbti, realMbtiShortArray, type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speech-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mbti-names\",\n          children: myMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), \"\\uB4E4\\uC740 \\uC885\\uC885\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mbti-names\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mbti-names mistype\",\n            children: myMistypes.join(\" & \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), \"\\uB4E4\\uACFC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), \"\\uD63C\\uB3D9\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), \"\\uB41C\\uB2E4\\uACE0 \\uD574\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"original-bingo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"original-bingo-title accent highlight\",\n        children: originalBingoTitle(type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BingoBoard, {\n        mbti: myMbti,\n        board: myMbtiBoard,\n        show: true,\n        disableClick: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mystery-reveal-title speech-bubble\",\n      children: [\"\\uD83D\\uDD2E \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mystery-reveal-title accent\",\n        children: \"\\uBBF8\\uC2A4\\uD14C\\uB9AC \\uBE59\\uACE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 12\n      }, this), \"\\uC758 \\uC815\\uCCB4\\uB97C \\uACF5\\uAC1C\\uD569\\uB2C8\\uB2E4!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mystery-bingo-reveal\",\n      children: mistypeBoardArray.map(renderMistypeRevealItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ResultsPage, \"QF9+Qwna/dmvPLacAog2SqJhxO0=\");\n\n_c = ResultsPage;\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js"],"names":["BingoBoard","Accordion","RankingBoard","downarrow","definite","likely","tie","surprise","typeImplementation","React","useEffect","useState","useRef","Typewriter","type","ResultsPage","myName","localStorage","getItem","myMbti","myMbtiBoard","JSON","parse","myMistypes","mistypeBoardArray","showTransition","setShowTransition","setTimeout","trueCount","board","count","i","length","filter","Boolean","myMbtiCount","mistypeCount","map","item","id","mbti","sortByCount","sort","a","b","addRanking","obj","ranking","firstPlaceArray","realMbtiArray","realMbtiShortArray","slice","realMbtiShortArrayWithoutOriginal","flatMap","realMbtiCount","e","includes","renderResultSummary","join","renderReaction","originalBingoTitle","renderMistypeRevealItem","renderTransition","renderMbtiImage","console","log","toLowerCase","require"],"mappings":"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","sourcesContent":["import BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\";\n\nimport downarrow from \"../images/downarrow.png\";\n\nimport definite from \"../images/definite.gif\";\nimport likely from \"../images/likely.gif\";\nimport tie from \"../images/tie.gif\";\nimport surprise from \"../images/surprise.gif\";\n\nimport { typeImplementation } from \"@testing-library/user-event/dist/type/typeImplementation\";\nimport React, { useEffect, useState, useRef } from \"react\";\n\nimport { Typewriter } from \"react-simple-typewriter\";\nimport { type } from \"@testing-library/user-event/dist/type\";\n\n// const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nfunction ResultsPage() {\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(\n    localStorage.getItem(\"mistypeBoardArray\")\n  );\n\n  const [showTransition, setShowTransition] = useState(true);\n\n  setTimeout(() => {\n    setShowTransition(false);\n  }, 2000);\n\n  // 예전 mistypedata ver.\n  // let myMistypesIds = myMistypes.map((item) => item.id);\n\n  // localStorage.setItem(\n  //   \"mistypeBoardArray\",\n  //   JSON.stringify(\n  //     myMistypes.map((mistype, i) => {\n  //       return {\n  //         mbti: mistype.id,\n  //         board: boardArray[i],\n  //       };\n\n  let trueCount = (board) => {\n    let count = 0;\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n    return count;\n  };\n\n  // // trueCount map으로 쓰는 법\n  // console.log(\n  //   myMbtiBoard\n  //     .map((row) => row.filter(Boolean).length)\n  //     .reduce((a, b) => a + b, 0)\n  // );\n\n  let myMbtiCount = trueCount(myMbtiBoard);\n\n  // 예전 mistypesdata ver.\n  let mistypeCount = mistypeBoardArray.map((item, i) => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board),\n    };\n  });\n\n  let sortByCount = [\n    ...mistypeCount,\n    {\n      id: myMbti,\n      count: trueCount(myMbtiBoard),\n    },\n  ].sort((a, b) => {\n    return b.count - a.count;\n  });\n\n  // 각 object에 ranking이라는 property attribute 추가하기\n  let addRanking = sortByCount.map((obj, i) => {\n    return { ranking: i + 1, ...obj };\n  });\n\n  // 앞 object와 value 비교해서 같으면 같은 등수로 바꿔주기\n  for (let i = 1; i < typeImplementation.length; i++) {\n    if (addRanking[i].count == addRanking[i - 1].count) {\n      addRanking[i].ranking = addRanking[i - 1].ranking;\n    }\n  }\n\n  // 1등한 유형을 realmbti로 놓기\n  let firstPlaceArray = addRanking.filter((obj) => obj.ranking === 1);\n  let realMbtiArray = firstPlaceArray.map((obj) => obj.id);\n  let realMbtiShortArray = firstPlaceArray.map((obj) => obj.id.slice(0, 4));\n  // let realMbtiShortArrayWithoutOriginal = firstPlaceArray\n  //   .filter((obj) => obj.id != myMbti)\n  //   .flatMap((obj) => obj.id.slice(0, 4));\n  let realMbtiShortArrayWithoutOriginal = firstPlaceArray.flatMap((obj) =>\n    obj.id != myMbti ? [obj.id.slice(0, 4)] : []\n  );\n\n  let realMbtiCount = firstPlaceArray[0].count;\n  // 얘넨 왜 안 됐을까?\n  // let realMbtiCount = firstPlaceArray.map((obj) => obj.count).join(\"\"));\n  // let realMbtiCount = firstPlaceArray.map((obj) => obj.count).toString();\n\n  // THIS WORKS BUT ERROR: TOO MANY RERENDERS\n  // let [type, setType] = useState(\"\");\n  // if (myMbtiCount - 5 > realMbtiCount) {\n  //   setType(\"definite\");\n  // } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n  //   setType(\"tie\");\n  // } else if (myMbtiCount < realMbtiCount) {\n  //   setType(\"surprise\");\n  // } else if (myMbtiCount > realMbtiCount) {\n  //   setType(\"likely\");\n  // }\n\n  let type = \"\";\n  if (myMbtiCount - 5 > realMbtiCount) {\n    type = \"definite\";\n    // } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n  } else if (\n    realMbtiArray.filter((e) => !e.includes(myMbti)) &&\n    myMbtiCount == realMbtiCount\n  ) {\n    type = \"tie\";\n  } else if (myMbtiCount < realMbtiCount) {\n    type = \"surprise\";\n  } else if (myMbtiCount > realMbtiCount) {\n    type = \"likely\";\n  }\n\n  // let whichType = addRanking.map((obj, i) => {\n  //   if (obj.ranking)\n  //   return type;\n  // });\n\n  //   let firstPlaceArray = addRanking.filter((obj) => obj.ranking === 1);\n\n  //  if (myMbti in firstPlaceArray && firstPlaceArray.length === 1 && ) {\n  //  }\n\n  // type = \"tie\";\n\n  let renderResultSummary = (\n    myMbti,\n    realMbtiShortArray,\n    // 왜 오히려 realMbtiShortArrayWithoutOriginal을 넣으면 의도대로 안 나오는 거지?\n    myMbtiCount,\n    realMbtiCount,\n    type\n  ) => {\n    // definite\n    if (type === \"definite\") {\n      return (\n        <div className=\"first-line\">\n          <span className=\"accent color\">{myMbti}</span>가{\" \"}\n          <span className=\"accent color\">{myMbtiCount}개</span>로 압도적으로\n          많았어요!\n        </div>\n      );\n    }\n    // tie\n    else if (type === \"tie\") {\n      return (\n        <div className=\"first-line\">\n          <span className=\"accent color\">{myMbti}</span>와{\" \"}\n          <span className=\"accent color\">\n            {realMbtiShortArrayWithoutOriginal.join(\" & \")}\n          </span>{\" \"}\n          빙고판에서 모두 동일하게{\" \"}\n          <span className=\"accent color\">{myMbtiCount}개</span> 선택했어요.\n        </div>\n      );\n    }\n    // surprise\n    else if (type === \"surprise\") {\n      return (\n        <div className=\"first-line\">\n          원래 MBTI인 줄 알았던 <span className=\"accent color\">{myMbti}</span>의\n          빙고에서는 <span className=\"accent color\">{myMbtiCount}개</span>\n          를 선택한 반면,\n          <br />\n          <span className=\"accent color\">\n            {realMbtiShortArrayWithoutOriginal.join(\" & \")}\n          </span>{\" \"}\n          빙고에서는 그보다 더 많은{\" \"}\n          <span className=\"accent color\">{realMbtiCount}개</span>를 선택했어요.\n        </div>\n      );\n    }\n    // likely\n    else if (type === \"likely\") {\n      return (\n        <div className=\"first-line\">\n          <span className=\"accent color\">{myMbtiCount}개</span>로{\" \"}\n          <span className=\"accent color\">{myMbti}</span> 빙고판의 선택 개수가\n          가장 많았어요.\n        </div>\n      );\n    }\n  };\n\n  let renderReaction = (myMbti, realMbtiShortArray, type) => {\n    // definite\n    if (type === \"definite\") {\n      return (\n        <div className=\"reaction\">\n          <img src={definite} loop=\"infinite\" />\n          <div className=\"reaction-text accent highlight\">\n            앞구르기 뒷구르기하면서 봐도 {myMbti}\n          </div>\n        </div>\n      );\n    }\n    // tie\n    else if (type === \"tie\") {\n      return (\n        <div className=\"reaction\">\n          <img src={tie} />\n          <div className=\"reaction-text accent highlight\">\n            내 안에 싸우고 있는 {firstPlaceArray.length}개의 자아\n            <br /> 나...어쩌면 {realMbtiShortArrayWithoutOriginal.join(\" or \")}\n            일지도...?\n          </div>\n        </div>\n      );\n    }\n    // surprise\n    else if (type === \"surprise\") {\n      return (\n        <div className=\"reaction\">\n          <img src={surprise} />\n          <div className=\"reaction-text accent highlight\">\n            한평생 {myMbti}로 살아온 내가 사실은{\" \"}\n            {realMbtiShortArray.join(\" or \")}...?!\n          </div>\n        </div>\n      );\n    }\n    // likely\n    else if (type === \"likely\") {\n      return (\n        <div className=\"reaction\">\n          <img src={likely} />\n          <div className=\"reaction-text accent highlight\">\n            MBTI는 과학이다— 아무래도 {myMbti} 맞는 듯~!\n          </div>\n        </div>\n      );\n    }\n  };\n\n  function originalBingoTitle(type) {\n    switch (type) {\n      case \"surprise\":\n        return \"나의 MBTI(였던 것)\";\n        break;\n      case \"tie\":\n        return \"나의 MBTI(일 수도~ 아닐 수도~)\";\n        break;\n      default:\n        return \"나의 MBTI 빙고\";\n    }\n  }\n\n  let renderMistypeRevealItem = (item, i) => {\n    return (\n      <div className=\"mistype-container\">\n        {/* <div className=\"mistype-title\">MYSTERY BINGO #{i + 1}</div>\n        <div className=\"mbti accent highlight\">{mistypeBoardArray[i].mbti}</div> */}\n        <span className=\"mistype-title\">MYSTERY BINGO #{i + 1} </span>\n        <span className=\"mbti accent highlight\">\n          {mistypeBoardArray[i].mbti}\n        </span>\n\n        <div className=\"mistype-bingo\">\n          <BingoBoard\n            mbti={mistypeBoardArray[i].mbti.slice(0, 4)}\n            board={mistypeBoardArray[i].board}\n            show={true}\n            disableClick={true}\n          />\n        </div>\n        <div className=\"mistype-reason\">\n          <Accordion\n            myMbti={myMbti}\n            mistype={mistypeBoardArray[i].mbti}\n            myMistypes={myMistypes}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  let renderTransition = () => {\n    if (!showTransition) {\n      return;\n    }\n\n    return (\n      <div className=\"transition\">\n        <div className=\"fixed-text\">과연 나의 진짜 MBTI는 뭘까?</div>\n        <div className=\"typewriter\">\n          <Typewriter\n            loop=\"1\"\n            cursor\n            cursorStyle=\"\"\n            typeSpeed={70}\n            deleteSpeed={50}\n            delaySpeed={1000}\n            words={[\"두구두구두구두구...!\"]}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  {\n    /* <img\n          src={require(`../images/${realMbti.toLowerCase().slice(0, 4)}.png`)}\n          width=\"300px\"\n        /> */\n  }\n\n  // let renderMbtiImage = () => {\n  //   for (let i = 0; i <= realMbtiShortArray.length; i++) {\n  //     console.log(realMbtiShortArray.length);\n  //     console.log(i);\n  //     console.log(`../images/${realMbtiShortArray[i].toLowerCase()}.png`);\n  //     return (\n  //       <img\n  //         src={require(`../images/${realMbtiShortArray[i].toLowerCase()}.png`)}\n  //         width=\"50px\"\n  //       />\n  //     );\n  //   }\n  // };\n\n  let renderMbtiImage = () => {\n    realMbtiShortArray.map((mbti) => {\n      console.log(mbti);\n      console.log(`../images/${mbti.toLowerCase()}.png`);\n      return (\n        <img\n          src={require(`../images/${mbti.toLowerCase()}.png`)}\n          width=\"100px\"\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      {renderTransition()}\n\n      <div className=\"result-intro\">\n        <div className=\"headline\">\n          <span className=\"name\">{myName}</span>님의{\" \"}\n          <span className=\"accent highlight\">진짜 MBTI</span>는<br></br>\n          <div className=\"mbti-img\">{renderMbtiImage()}</div>\n          {/* <span className=\"myrealmbti accent highlight\">{realMbti}</span> 입니다 */}\n        </div>\n\n        <div className=\"result-summary\">\n          {renderResultSummary(\n            myMbti,\n            realMbtiShortArray,\n            myMbtiCount,\n            realMbtiCount,\n            type\n          )}\n        </div>\n\n        <div className=\"ranking\">\n          <RankingBoard ranking={addRanking} />\n        </div>\n\n        <div className=\"reaction\">\n          {renderReaction(myMbti, realMbtiShortArray, type)}\n        </div>\n\n        {/* <div className=\"mistype-sentence\">\n          {myMbti}들은 종종{\" \"}\n          <span className=\"mistype-names\">{myMistypesIds.join(\" & \")}</span>들과\n          혼동된다고 해요.\n        </div> */}\n        <div className=\"speech-bubble\">\n          <span className=\"mbti-names\">{myMbti}</span>들은 종종{\" \"}\n          <span className=\"mbti-names\">\n            <span className=\"mbti-names mistype\">{myMistypes.join(\" & \")}</span>\n            들과\n            <br />\n            혼동\n          </span>\n          된다고 해요.\n        </div>\n      </div>\n      <div className=\"original-bingo\">\n        <div className=\"original-bingo-title accent highlight\">\n          {/* {type === \"likely\" || type === \"definite\"\n            ? \"나의 MBTI 빙고\"\n            : \"나의 MBTI(였던 것)\"} */}\n          {originalBingoTitle(type)}\n        </div>\n        <BingoBoard\n          mbti={myMbti}\n          board={myMbtiBoard}\n          show={true}\n          disableClick={true}\n        />\n\n        {/* <div className=\"mistype-reason\">\n          <Accordion\n            myMbti={myMbti}\n            mistype={mistypeBoardArray[i].mbti}\n            myMistypes={myMistypes}\n          />\n        </div> */}\n      </div>\n\n      {/* <div className=\"original-mbti-reason\">\n        <Accordion\n          myMbti={myMbti}\n          mistype={}\n          myMistypes={}\n        />\n      </div> */}\n\n      {/* <div className=\"mystery-reveal-title\">\n        <div className=\"banner\">\n          <span className=\"accent highlight\">\n            <span className=\"emoji\">🔮</span> 미스테리 빙고의<br></br> 정체를\n            공개합니다!{\" \"}\n          </span>\n        </div>\n        <div className=\"down-arrow\">\n          <img src={downarrow} width=\"50px\" />\n        </div>\n      </div> */}\n      <div className=\"mystery-reveal-title speech-bubble\">\n        🔮 <span className=\"mystery-reveal-title accent\">미스테리 빙고</span>의\n        정체를 공개합니다!\n      </div>\n      <div className=\"mystery-bingo-reveal\">\n        {mistypeBoardArray.map(renderMistypeRevealItem)}\n      </div>\n    </>\n  );\n}\n\nexport default ResultsPage;\n"]},"metadata":{},"sourceType":"module"}