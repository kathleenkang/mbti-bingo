{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/components/BingoBoard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport BingoSquare from \"./BingoSquare.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BingoBoard(_ref) {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  let itemRows = [];\n  const rowLength = 5;\n\n  for (let i = 0; i < items.length; i += rowLength) {\n    const row = items.slice(i, i + rowLength);\n    itemRows.push(row);\n  }\n\n  const [bingoState, setBingoState] = useState(itemRows.map(row => {\n    return row.map(item => {\n      return {\n        item: item,\n        activated: false\n      };\n    });\n  }));\n\n  const onSquareClick = (row, col) => {\n    let newBingoState = [...bingoState];\n    newBingoState[row][col][\"activated\"] = !newBingoState[row][col][\"activated\"];\n    setBingoState(newBingoState);\n  };\n\n  const renderRow = (row, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((squareInfo, j) => {\n        return /*#__PURE__*/_jsxDEV(BingoSquare, {\n          info: squareInfo,\n          onSquareClick: onSquareClick,\n          row: i,\n          col: j\n        }, `bingo-square-${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      })\n    }, `row-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"bingo-board\",\n    children: bingoState.map(renderRow)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BingoBoard, \"HeVMVmVzc4EeWF5liRZDUpshnsc=\");\n\n_c = BingoBoard;\nexport default BingoBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BingoBoard\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/components/BingoBoard.js"],"names":["useState","BingoSquare","BingoBoard","items","itemRows","rowLength","i","length","row","slice","push","bingoState","setBingoState","map","item","activated","onSquareClick","col","newBingoState","renderRow","squareInfo","j"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;;AAEA,SAASC,UAAT,OAA+B;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC7B,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,SAAS,GAAG,CAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,IAAID,SAAvC,EAAkD;AAChD,UAAMG,GAAG,GAAGL,KAAK,CAACM,KAAN,CAAYH,CAAZ,EAAeA,CAAC,GAAGD,SAAnB,CAAZ;AACAD,IAAAA,QAAQ,CAACM,IAAT,CAAcF,GAAd;AACD;;AAED,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAC1CI,QAAQ,CAACS,GAAT,CAAcL,GAAD,IAAS;AACpB,WAAOA,GAAG,CAACK,GAAJ,CAASC,IAAD,IAAU;AACvB,aAAO;AACLA,QAAAA,IAAI,EAAEA,IADD;AAELC,QAAAA,SAAS,EAAE;AAFN,OAAP;AAID,KALM,CAAP;AAMD,GAPD,CAD0C,CAA5C;;AAWA,QAAMC,aAAa,GAAG,CAACR,GAAD,EAAMS,GAAN,KAAc;AAClC,QAAIC,aAAa,GAAG,CAAC,GAAGP,UAAJ,CAApB;AACAO,IAAAA,aAAa,CAACV,GAAD,CAAb,CAAmBS,GAAnB,EAAwB,WAAxB,IACE,CAACC,aAAa,CAACV,GAAD,CAAb,CAAmBS,GAAnB,EAAwB,WAAxB,CADH;AAEAL,IAAAA,aAAa,CAACM,aAAD,CAAb;AACD,GALD;;AAOA,QAAMC,SAAS,GAAG,CAACX,GAAD,EAAMF,CAAN,KAAY;AAC5B,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGE,GAAG,CAACK,GAAJ,CAAQ,CAACO,UAAD,EAAaC,CAAb,KAAmB;AAC1B,4BACE,QAAC,WAAD;AACE,UAAA,IAAI,EAAED,UADR;AAGE,UAAA,aAAa,EAAEJ,aAHjB;AAIE,UAAA,GAAG,EAAEV,CAJP;AAKE,UAAA,GAAG,EAAEe;AALP,WAEQ,gBAAef,CAAE,IAAGe,CAAE,EAF9B;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADH,OAA2B,OAAMf,CAAE,EAAnC;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD;;AAkBA,sBAAO;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA,cAAuBK,UAAU,CAACE,GAAX,CAAeM,SAAf;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7CQjB,U;;KAAAA,U;AA+CT,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\nimport BingoSquare from \"./BingoSquare.js\";\n\nfunction BingoBoard({ items }) {\n  let itemRows = [];\n  const rowLength = 5;\n  for (let i = 0; i < items.length; i += rowLength) {\n    const row = items.slice(i, i + rowLength);\n    itemRows.push(row);\n  }\n\n  const [bingoState, setBingoState] = useState(\n    itemRows.map((row) => {\n      return row.map((item) => {\n        return {\n          item: item,\n          activated: false,\n        };\n      });\n    })\n  );\n\n  const onSquareClick = (row, col) => {\n    let newBingoState = [...bingoState];\n    newBingoState[row][col][\"activated\"] =\n      !newBingoState[row][col][\"activated\"];\n    setBingoState(newBingoState);\n  };\n\n  const renderRow = (row, i) => {\n    return (\n      <div className=\"row\" key={`row-${i}`}>\n        {row.map((squareInfo, j) => {\n          return (\n            <BingoSquare\n              info={squareInfo}\n              key={`bingo-square-${i}-${j}`}\n              onSquareClick={onSquareClick}\n              row={i}\n              col={j}\n            />\n          );\n        })}\n      </div>\n    );\n  };\n\n  return <div id=\"bingo-board\">{bingoState.map(renderRow)}</div>;\n}\n\nexport default BingoBoard;\n"]},"metadata":{},"sourceType":"module"}