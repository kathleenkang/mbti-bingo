{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/components/BingoBoard.js\";\n// import \"./BingoSquare.css\";\nimport \"./BingoBoard.css\"; // import React, { useState, useEffect } from \"react\";\n// function BingoBoard({ items }) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BingoBoard() {\n  // console.log(items);\n  const items = [\"생각은 많은데 행동이 안 따라줌\", \"어린애들이랑 잘 어울림\", \"열쩡! 열쩡! 열쩡!\", \"공감능력 최상\", \"의리 없으면 시체\", \"매사가 감정의 롤러코스터\", \"아싸\", \"전체주의 NO. 각자만의 길\", \"불안초조예민\", \"눈치 많이 보는 편\", \"이상주의적\", \"유리멘탈\", \"INFP\", \"판타지물 등 신비롭고 몽환적인 것을 좋아함\", \"항상 올바른 길을 택하고자 함\", \"갈등은 어떻게든 피하는 쪽\", \"다른 사람들을 이해하고 싶다\", \"이야기 잘 들어줌\", \"미술, 글쓰기 등 예술성\", \"우울한 힙스터\", \"꾀가 많음\", \"단체생활 체질 아님\", \"몽상가\", \"신적 존재를 믿음\", \"글을 많이 읽는 편\"]; // splitting an array into chunks of 5 items each\n\n  let rows = [];\n  const size = 5;\n\n  for (let i = 0; i < items.length; i += size) rows.push(items.slice(i, i + size));\n\n  console.log(rows); // let itemRows = [];\n  // const rowLength = 5;\n  // for (let i = 0; i < items.length; i += rowLength) {\n  //   const row = items.slice(i, i + rowLength);\n  //   itemRows.push(row);\n  // }\n  // // console.log(row);\n  // console.log(itemRows);\n  // let dataChunk = chunk(items, 5);\n  // console.log(dataChunk);\n\n  let rowDivs = [];\n\n  for (let i = 0; i < rows.length; i++) {\n    let currentRow = rows[i];\n    let colDivs = [];\n\n    for (let j = 0; j < currentRow.length; j++) {\n      let currentItem = currentRow[j];\n      colDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: currentItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this));\n    }\n\n    rowDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: colDivs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }, this));\n  } // console.log()\n\n\n  let renderRow = row => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: row.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: rows.map(renderRow)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = BingoBoard;\nexport default BingoBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BingoBoard\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/components/BingoBoard.js"],"names":["BingoBoard","items","rows","size","i","length","push","slice","console","log","rowDivs","currentRow","colDivs","j","currentItem","renderRow","row","map","item"],"mappings":";AAAA;AACA,OAAO,kBAAP,C,CACA;AAEA;;;;;AACA,SAASA,UAAT,GAAsB;AACpB;AAEA,QAAMC,KAAK,GAAG,CACZ,mBADY,EAEZ,cAFY,EAGZ,aAHY,EAIZ,SAJY,EAKZ,WALY,EAMZ,eANY,EAOZ,IAPY,EAQZ,iBARY,EASZ,QATY,EAUZ,YAVY,EAWZ,OAXY,EAYZ,MAZY,EAaZ,MAbY,EAcZ,yBAdY,EAeZ,kBAfY,EAgBZ,gBAhBY,EAiBZ,iBAjBY,EAkBZ,WAlBY,EAmBZ,eAnBY,EAoBZ,SApBY,EAqBZ,OArBY,EAsBZ,YAtBY,EAuBZ,KAvBY,EAwBZ,WAxBY,EAyBZ,YAzBY,CAAd,CAHoB,CA+BpB;;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,QAAMC,IAAI,GAAG,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,IAAID,IAAvC,EACED,IAAI,CAACI,IAAL,CAAUL,KAAK,CAACM,KAAN,CAAYH,CAAZ,EAAeA,CAAC,GAAGD,IAAnB,CAAV;;AACFK,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EApCoB,CAsCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAIQ,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIO,UAAU,GAAGT,IAAI,CAACE,CAAD,CAArB;AACA,QAAIQ,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACN,MAA/B,EAAuCQ,CAAC,EAAxC,EAA4C;AAC1C,UAAIC,WAAW,GAAGH,UAAU,CAACE,CAAD,CAA5B;AACAD,MAAAA,OAAO,CAACN,IAAR,eAAa;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAAsBQ;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAb;AACD;;AAEDJ,IAAAA,OAAO,CAACJ,IAAR,eAAa;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAAsBM;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAb;AACD,GA5DmB,CA8DpB;;;AAEA,MAAIG,SAAS,GAAIC,GAAD,iBACd;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGA,GAAG,CAACC,GAAJ,CAASC,IAAD,iBACP;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,sBACE;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BhB,IAAI,CAACe,GAAL,CAASF,SAAT;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAkBD;;KA1FQf,U;AA4FT,eAAeA,UAAf","sourcesContent":["// import \"./BingoSquare.css\";\nimport \"./BingoBoard.css\";\n// import React, { useState, useEffect } from \"react\";\n\n// function BingoBoard({ items }) {\nfunction BingoBoard() {\n  // console.log(items);\n\n  const items = [\n    \"생각은 많은데 행동이 안 따라줌\",\n    \"어린애들이랑 잘 어울림\",\n    \"열쩡! 열쩡! 열쩡!\",\n    \"공감능력 최상\",\n    \"의리 없으면 시체\",\n    \"매사가 감정의 롤러코스터\",\n    \"아싸\",\n    \"전체주의 NO. 각자만의 길\",\n    \"불안초조예민\",\n    \"눈치 많이 보는 편\",\n    \"이상주의적\",\n    \"유리멘탈\",\n    \"INFP\",\n    \"판타지물 등 신비롭고 몽환적인 것을 좋아함\",\n    \"항상 올바른 길을 택하고자 함\",\n    \"갈등은 어떻게든 피하는 쪽\",\n    \"다른 사람들을 이해하고 싶다\",\n    \"이야기 잘 들어줌\",\n    \"미술, 글쓰기 등 예술성\",\n    \"우울한 힙스터\",\n    \"꾀가 많음\",\n    \"단체생활 체질 아님\",\n    \"몽상가\",\n    \"신적 존재를 믿음\",\n    \"글을 많이 읽는 편\",\n  ];\n\n  // splitting an array into chunks of 5 items each\n  let rows = [];\n  const size = 5;\n  for (let i = 0; i < items.length; i += size)\n    rows.push(items.slice(i, i + size));\n  console.log(rows);\n\n  // let itemRows = [];\n  // const rowLength = 5;\n  // for (let i = 0; i < items.length; i += rowLength) {\n  //   const row = items.slice(i, i + rowLength);\n  //   itemRows.push(row);\n  // }\n  // // console.log(row);\n  // console.log(itemRows);\n\n  // let dataChunk = chunk(items, 5);\n  // console.log(dataChunk);\n\n  let rowDivs = [];\n  for (let i = 0; i < rows.length; i++) {\n    let currentRow = rows[i];\n    let colDivs = [];\n    for (let j = 0; j < currentRow.length; j++) {\n      let currentItem = currentRow[j];\n      colDivs.push(<div className=\"col\">{currentItem}</div>);\n    }\n\n    rowDivs.push(<div className=\"row\">{colDivs}</div>);\n  }\n\n  // console.log()\n\n  let renderRow = (row) => (\n    <div className=\"row\">\n      {row.map((item) => (\n        <div className=\"col\">{item}</div>\n      ))}\n    </div>\n  );\n\n  return (\n    <>\n      {/* <div className=\"container\">{rowDivs}</div> */}\n      <div className=\"container\">{rows.map(renderRow)}</div>\n\n      {/* <div>\n        {items.map((item) => (\n          <li>{item}</li>\n        ))}\n      </div> */}\n\n      {/* <div>\n        {rows.map((row) => (\n          <div>{row}</div>\n        ))}\n      </div> */}\n    </>\n  );\n}\n\nexport default BingoBoard;\n"]},"metadata":{},"sourceType":"module"}