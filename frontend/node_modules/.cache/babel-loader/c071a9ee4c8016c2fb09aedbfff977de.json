{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/pages/MysteryBingoPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./MysteryBingoPage.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport BingoBoard from \"../components/BingoBoard\";\nimport { useState } from \"react\";\nimport mistypesData from \"../mistypesData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MysteryBingoPage() {\n  _s();\n\n  // const { mysteryMbtiBingo } = useParams();\n  // const mysteryBingo = getBingoBySlug(mysteryMbtiBingo);\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\"); // const myMistypes = localStorage.getItem(\"myMistypes\");\n\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\")); // mistype들의 clickedcount를 push? (results 때문에 비교해야 하니까)\n\n  let myMistypeCounts = [];\n  let currMbti = myMistypes[2].id.substring(0, 4);\n  console.log(currMbti); // let myMistypes.map((mistype) => (<Link to={`/mysteryMbtiBingo/${mistype.id}`}></Link))\n\n  const [clickedArray, setClickedArray] = useState([new Array(5).fill(false), new Array(5).fill(false), new Array(5).fill(false), new Array(5).fill(false), new Array(5).fill(false)]);\n\n  let clickedCount = array => {\n    let count = 0;\n\n    for (let i = 0; i < clickedArray.length; i++) {\n      count += array[i].filter(Boolean).length;\n    }\n\n    return count;\n  };\n\n  let Conditional = () => {// onclick하면서 mistype{i}의 i++도 해주고 mistype{i}의 clickedCount도 localstorage해줘야 함\n    // i++하다가 마지막에 undefined/false가 되면 to=\"/results\" + onclick count storage\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [\" / \", myMistypes.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BingoBoard // mbti={`mistype${i}`}\n    , {\n      mbti: currMbti,\n      clickedArray: clickedArray,\n      setClickedArray: setClickedArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\":\", /*#__PURE__*/_jsxDEV(Link // to=\"/results\"\n      // className=\"btn\"\n      // onClick={(e) =>\n      //   localStorage.setItem(`mistype${i}Count`, clickedCount(clickedArray))\n      // }\n      , {\n        children: \"\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MysteryBingoPage, \"/SN8nS224Q04ijugoER61M9M2YY=\");\n\n_c = MysteryBingoPage;\nexport default MysteryBingoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MysteryBingoPage\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/pages/MysteryBingoPage.js"],"names":["Link","useParams","BingoBoard","useState","mistypesData","MysteryBingoPage","myName","localStorage","getItem","myMbti","myMistypes","JSON","parse","myMistypeCounts","currMbti","id","substring","console","log","clickedArray","setClickedArray","Array","fill","clickedCount","array","count","i","length","filter","Boolean","Conditional"],"mappings":";;;AAAA,OAAO,wBAAP;AACA,SAASA,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B;AACA;AACA,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,QAAMC,MAAM,GAAGF,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf,CAJ0B,CAK1B;;AACA,QAAME,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAnB,CAN0B,CAQ1B;;AACA,MAAIK,eAAe,GAAG,EAAtB;AAEA,MAAIC,QAAQ,GAAGJ,UAAU,CAAC,CAAD,CAAV,CAAcK,EAAd,CAAiBC,SAAjB,CAA2B,CAA3B,EAA8B,CAA9B,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAZ0B,CAc1B;;AAEA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,CAC/C,IAAIkB,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,KAAlB,CAD+C,EAE/C,IAAID,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,KAAlB,CAF+C,EAG/C,IAAID,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,KAAlB,CAH+C,EAI/C,IAAID,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,KAAlB,CAJ+C,EAK/C,IAAID,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,KAAlB,CAL+C,CAAD,CAAhD;;AAQA,MAAIC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIC,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,YAAY,CAACQ,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,MAAAA,KAAK,IAAID,KAAK,CAACE,CAAD,CAAL,CAASE,MAAT,CAAgBC,OAAhB,EAAyBF,MAAlC;AACD;;AACD,WAAOF,KAAP;AACD,GAND;;AAQA,MAAIK,WAAW,GAAG,MAAM,CACtB;AACA;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,wBACQpB,UAAU,CAACiB,MADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,UAAD,CACE;AADF;AAEE,MAAA,IAAI,EAAEb,QAFR;AAGE,MAAA,YAAY,EAAEK,YAHhB;AAIE,MAAA,eAAe,EAAEC;AAJnB;AAAA;AAAA;AAAA;AAAA,YATF,eAgBE;AAAA,mCAEE,QAAC,IAAD,CACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AA+BD;;GApEQf,gB;;KAAAA,gB;AAsET,eAAeA,gBAAf","sourcesContent":["import \"./MysteryBingoPage.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport BingoBoard from \"../components/BingoBoard\";\nimport { useState } from \"react\";\nimport mistypesData from \"../mistypesData.json\";\n\nfunction MysteryBingoPage() {\n  // const { mysteryMbtiBingo } = useParams();\n  // const mysteryBingo = getBingoBySlug(mysteryMbtiBingo);\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  // const myMistypes = localStorage.getItem(\"myMistypes\");\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n\n  // mistype들의 clickedcount를 push? (results 때문에 비교해야 하니까)\n  let myMistypeCounts = [];\n\n  let currMbti = myMistypes[2].id.substring(0, 4);\n  console.log(currMbti);\n\n  // let myMistypes.map((mistype) => (<Link to={`/mysteryMbtiBingo/${mistype.id}`}></Link))\n\n  const [clickedArray, setClickedArray] = useState([\n    new Array(5).fill(false),\n    new Array(5).fill(false),\n    new Array(5).fill(false),\n    new Array(5).fill(false),\n    new Array(5).fill(false),\n  ]);\n\n  let clickedCount = (array) => {\n    let count = 0;\n    for (let i = 0; i < clickedArray.length; i++) {\n      count += array[i].filter(Boolean).length;\n    }\n    return count;\n  };\n\n  let Conditional = () => {\n    // onclick하면서 mistype{i}의 i++도 해주고 mistype{i}의 clickedCount도 localstorage해줘야 함\n    // i++하다가 마지막에 undefined/false가 되면 to=\"/results\" + onclick count storage\n  };\n\n  return (\n    <>\n      <div className=\"progress\">\n        {} / {myMistypes.length}\n      </div>\n      {/* <div className=\"bingo-instruction\">\n        {myName} 님에게 해당되는 설명의 칸을 <br></br> 모두 선택한 후 '완료'\n        버튼을 눌러주세요!\n      </div> */}\n\n      <BingoBoard\n        // mbti={`mistype${i}`}\n        mbti={currMbti}\n        clickedArray={clickedArray}\n        setClickedArray={setClickedArray}\n      />\n\n      <div>\n        :\n        <Link\n        // to=\"/results\"\n        // className=\"btn\"\n        // onClick={(e) =>\n        //   localStorage.setItem(`mistype${i}Count`, clickedCount(clickedArray))\n        // }\n        >\n          완료\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default MysteryBingoPage;\n"]},"metadata":{},"sourceType":"module"}