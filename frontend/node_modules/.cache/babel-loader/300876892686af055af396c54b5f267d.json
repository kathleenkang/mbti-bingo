{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/pages/MysteryBingoPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./MysteryBingoPage.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport BingoBoard from \"../components/BingoBoard\";\nimport { useState } from \"react\";\nimport mistypesData from \"../mistypesData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MysteryBingoPage() {\n  _s();\n\n  // const { mysteryMbtiBingo } = useParams();\n  // const mysteryBingo = getBingoBySlug(mysteryMbtiBingo);\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const [curIndex, setCurIndex] = useState(0);\n  let curMbti = myMistypes[curIndex].substring(0, 4); // 예전 mistypesdata 버전\n  // let curMbti = myMistypes[curIndex].id.substring(0, 4);\n  // let mistypesLoop = (array) => {\n  //   // for (let i = 0; i < myMistypes.length; i++) {\n  //   //   let currMbti = myMistypes[i].id.substring(0, 4);\n  //   // }\n  //   currIndex++;\n  //   return currMbti;\n  // };\n  // let myMistypes.map((mistype) => (<Link to={`/mysteryMbtiBingo/${mistype.id}`}></Link))\n\n  const [boardArray, setBoardArray] = useState(new Array(myMistypes.length).fill(false).map(x => [new Array(5).fill(false), new Array(5).fill(false), new Array(5).fill(false), new Array(5).fill(false), new Array(5).fill(false)]));\n\n  let changeBoardWithIndex = index => {\n    return newBoard => {\n      let newBoardArray = [...boardArray];\n      newBoardArray[index] = newBoard;\n      setBoardArray(newBoardArray);\n    };\n  }; // let clickedCount = (array) => {\n  //   let count = 0;\n  //   for (let i = 0; i < clickedArray.length; i++) {\n  //     count += array[i].filter(Boolean).length;\n  //   }\n  //   return count;\n  // };\n\n\n  let renderBoard = (board, i) => {\n    return /*#__PURE__*/_jsxDEV(BingoBoard, {\n      mbti: curMbti,\n      board: board,\n      onBoardChange: changeBoardWithIndex(i),\n      show: curIndex == i,\n      isMysteryBingo: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [curIndex + 1, \" / \", myMistypes.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), boardArray.map(renderBoard), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: curIndex + 1 < myMistypes.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: e => {\n          setCurIndex(curIndex + 1);\n        },\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        className: \"btn\",\n        onClick: e => localStorage.setItem(\"mistypeBoardArray\", JSON.stringify(myMistypes.map((mistype, i) => {\n          return {\n            // mbti: mistype.id,\n            mbti: mistype[i],\n            board: boardArray[i]\n          };\n        }))),\n        children: \"\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MysteryBingoPage, \"9fWoGNciwxGVTWX2uAJZAGy2kLc=\");\n\n_c = MysteryBingoPage;\nexport default MysteryBingoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MysteryBingoPage\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/pages/MysteryBingoPage.js"],"names":["Link","useParams","BingoBoard","useState","mistypesData","MysteryBingoPage","myName","localStorage","getItem","myMbti","myMistypes","JSON","parse","curIndex","setCurIndex","curMbti","substring","boardArray","setBoardArray","Array","length","fill","map","x","changeBoardWithIndex","index","newBoard","newBoardArray","renderBoard","board","i","e","setItem","stringify","mistype","mbti"],"mappings":"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","sourcesContent":["import \"./MysteryBingoPage.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport BingoBoard from \"../components/BingoBoard\";\nimport { useState } from \"react\";\nimport mistypesData from \"../mistypesData.json\";\n\nfunction MysteryBingoPage() {\n  // const { mysteryMbtiBingo } = useParams();\n  // const mysteryBingo = getBingoBySlug(mysteryMbtiBingo);\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n\n  const [curIndex, setCurIndex] = useState(0);\n\n  let curMbti = myMistypes[curIndex].substring(0, 4);\n\n  // 예전 mistypesdata 버전\n  // let curMbti = myMistypes[curIndex].id.substring(0, 4);\n\n  // let mistypesLoop = (array) => {\n  //   // for (let i = 0; i < myMistypes.length; i++) {\n  //   //   let currMbti = myMistypes[i].id.substring(0, 4);\n  //   // }\n  //   currIndex++;\n  //   return currMbti;\n  // };\n\n  // let myMistypes.map((mistype) => (<Link to={`/mysteryMbtiBingo/${mistype.id}`}></Link))\n\n  const [boardArray, setBoardArray] = useState(\n    new Array(myMistypes.length)\n      .fill(false)\n      .map((x) => [\n        new Array(5).fill(false),\n        new Array(5).fill(false),\n        new Array(5).fill(false),\n        new Array(5).fill(false),\n        new Array(5).fill(false),\n      ])\n  );\n\n  let changeBoardWithIndex = (index) => {\n    return (newBoard) => {\n      let newBoardArray = [...boardArray];\n      newBoardArray[index] = newBoard;\n      setBoardArray(newBoardArray);\n    };\n  };\n\n  // let clickedCount = (array) => {\n  //   let count = 0;\n  //   for (let i = 0; i < clickedArray.length; i++) {\n  //     count += array[i].filter(Boolean).length;\n  //   }\n  //   return count;\n  // };\n\n  let renderBoard = (board, i) => {\n    return (\n      <BingoBoard\n        mbti={curMbti}\n        board={board}\n        onBoardChange={changeBoardWithIndex(i)}\n        show={curIndex == i}\n        isMysteryBingo={true}\n      />\n    );\n  };\n\n  return (\n    <>\n      <div className=\"progress\">\n        {curIndex + 1} / {myMistypes.length}\n      </div>\n\n      {boardArray.map(renderBoard)}\n\n      <div>\n        {curIndex + 1 < myMistypes.length ? (\n          <button\n            className=\"btn\"\n            onClick={(e) => {\n              setCurIndex(curIndex + 1);\n            }}\n          >\n            다음\n          </button>\n        ) : (\n          <Link\n            to=\"/results\"\n            className=\"btn\"\n            onClick={(e) =>\n              localStorage.setItem(\n                \"mistypeBoardArray\",\n                JSON.stringify(\n                  myMistypes.map((mistype, i) => {\n                    return {\n                      // mbti: mistype.id,\n                      mbti: mistype[i],\n                      board: boardArray[i],\n                    };\n                  })\n                )\n              )\n            }\n          >\n            완료\n          </Link>\n        )}\n      </div>\n\n      {/* <div>\n        {curIndex < myMistypes.length ? (\n          <Link\n            to=\"/mysterybingo\"\n            className=\"btn\"\n            onClick={(e) => {\n              localStorage.setItem(\n                `mistype${curIndex + 1}Count`,\n                clickedCount(clickedArray)\n              );\n              curIndex++;\n            }}\n          >\n            완료\n          </Link>\n        ) : (\n          <Link\n            to=\"/results\"\n            className=\"btn\"\n            onClick={(e) =>\n              localStorage.setItem(\n                `mistype${curIndex + 1}Count`,\n                clickedCount(clickedArray)\n              )\n            }\n          >\n            완료\n          </Link>\n        )}\n      </div> */}\n    </>\n  );\n}\n\nexport default MysteryBingoPage;\n"]},"metadata":{},"sourceType":"module"}