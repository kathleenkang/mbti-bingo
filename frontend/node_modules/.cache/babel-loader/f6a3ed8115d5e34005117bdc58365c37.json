{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/components/BingoBoard.js\";\n// import \"./BingoSquare.css\";\nimport \"./BingoBoard.css\"; // import React, { useState, useEffect } from \"react\";\n\nimport bingoContentData from \"../bingoContentData.json\"; // function BingoBoard({ items }) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BingoBoard(_ref) {\n  let {\n    mbti\n  } = _ref;\n  // console.log(bingoContentData);\n  // console.log(bingoContentData.find((obj) => obj.id == mbti));\n  const items = bingoContentData.find(obj => obj.id == mbti).items; // splitting an array into chunks of 5 items each\n\n  let rows = [];\n  const size = 5;\n\n  for (let i = 0; i < items.length; i += size) rows.push(items.slice(i, i + size)); // console.log(rows);\n  // let rowDivs = [];\n  // for (let i = 0; i < rows.length; i++) {\n  //   let currentRow = rows[i];\n  //   let colDivs = [];\n  //   for (let j = 0; j < currentRow.length; j++) {\n  //     let currentItem = currentRow[j];\n  //     colDivs.push(<div className=\"col\">{currentItem}</div>);\n  //   }\n  //   rowDivs.push(<div className=\"row\">{colDivs}</div>);\n  // }\n\n\n  let renderCol = item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col\",\n    children: item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 29\n  }, this);\n\n  let renderRow = row => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: row.map(renderCol)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 28\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: rows.map(renderRow)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = BingoBoard;\nexport default BingoBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BingoBoard\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/components/BingoBoard.js"],"names":["bingoContentData","BingoBoard","mbti","items","find","obj","id","rows","size","i","length","push","slice","renderCol","item","renderRow","row","map"],"mappings":";AAAA;AACA,OAAO,kBAAP,C,CACA;;AAEA,OAAOA,gBAAP,MAA6B,0BAA7B,C,CAEA;;;;;AACA,SAASC,UAAT,OAA8B;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC5B;AACA;AAEA,QAAMC,KAAK,GAAGH,gBAAgB,CAACI,IAAjB,CAAuBC,GAAD,IAASA,GAAG,CAACC,EAAJ,IAAUJ,IAAzC,EAA+CC,KAA7D,CAJ4B,CAM5B;;AACA,MAAII,IAAI,GAAG,EAAX;AACA,QAAMC,IAAI,GAAG,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,IAAID,IAAvC,EACED,IAAI,CAACI,IAAL,CAAUR,KAAK,CAACS,KAAN,CAAYH,CAAZ,EAAeA,CAAC,GAAGD,IAAnB,CAAV,EAV0B,CAW5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,MAAIK,SAAS,GAAIC,IAAD,iBAAU;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,UAA1B;;AAEA,MAAIC,SAAS,GAAIC,GAAD,iBAAS;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBA,GAAG,CAACC,GAAJ,CAAQJ,SAAR;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAzB;;AAEA,sBACE;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BN,IAAI,CAACU,GAAL,CAASF,SAAT;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAMD;;KAnCQd,U;AAqCT,eAAeA,UAAf","sourcesContent":["// import \"./BingoSquare.css\";\nimport \"./BingoBoard.css\";\n// import React, { useState, useEffect } from \"react\";\n\nimport bingoContentData from \"../bingoContentData.json\";\n\n// function BingoBoard({ items }) {\nfunction BingoBoard({ mbti }) {\n  // console.log(bingoContentData);\n  // console.log(bingoContentData.find((obj) => obj.id == mbti));\n\n  const items = bingoContentData.find((obj) => obj.id == mbti).items;\n\n  // splitting an array into chunks of 5 items each\n  let rows = [];\n  const size = 5;\n  for (let i = 0; i < items.length; i += size)\n    rows.push(items.slice(i, i + size));\n  // console.log(rows);\n\n  // let rowDivs = [];\n  // for (let i = 0; i < rows.length; i++) {\n  //   let currentRow = rows[i];\n  //   let colDivs = [];\n  //   for (let j = 0; j < currentRow.length; j++) {\n  //     let currentItem = currentRow[j];\n  //     colDivs.push(<div className=\"col\">{currentItem}</div>);\n  //   }\n\n  //   rowDivs.push(<div className=\"row\">{colDivs}</div>);\n  // }\n\n  let renderCol = (item) => <div className=\"col\">{item}</div>;\n\n  let renderRow = (row) => <div className=\"row\">{row.map(renderCol)}</div>;\n\n  return (\n    <>\n      {/* <div className=\"container\">{rowDivs}</div> */}\n      <div className=\"container\">{rows.map(renderRow)}</div>\n    </>\n  );\n}\n\nexport default BingoBoard;\n"]},"metadata":{},"sourceType":"module"}