{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js\";\nimport BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\"; // import mbtiimg from \"../images/infp.png\";\n// import mbtiimg from `../images/${realMbti}.png`;\n// const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResultsPage() {\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(localStorage.getItem(\"mistypeBoardArray\"));\n  let testByRankArray = [{\n    mbti: \"INFP\",\n    count: \"18\"\n  }, {\n    mbti: \"ISFJ\",\n    count: \"16\"\n  }, {\n    mbti: \"ENFP-Fi\",\n    count: \"12\"\n  }, {\n    mbti: \"ISFP\",\n    count: \"11\"\n  }]; // console.log(mistypeBoardArray);\n  // 이거 대신 mistypeboardarray 안에 있는 id 사용하는 게 낫나?\n\n  let myMistypesIds = myMistypes.map(item => item.id); // // 준우 test data (원래 예상대로인 케이스)\n  // const testMistypeCountArray = [12, 11, 16];\n  // // 내 test data (알고보니 다른 케이스)\n  // const myMbtiCount = 15;\n  // const testMistypeCountArray = [17, 8, 9];\n  // test data (두가지 선택개수가 똑같은 케이스)\n\n  const realMbti = \"ENFP\";\n  const realMbtiCount = \"test\"; // 왜 결과값이 아니라 코드가 그대로 출력되지?\n  // let myMbtiCount = (array) => {\n  //   let count = 0;\n  //   for (let i = 0; i < myMbtiBoard.length; i++) {\n  //     count += array[i].filter(Boolean).length;\n  //   }\n  //   return count;\n  // };\n  // THIS!!!!\n\n  let trueCount = board => {\n    let count = 0;\n\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n\n    return count;\n  }; // trueCount map으로 쓰는 법?\n  // let trueCount = (board) => {\n  //   counter = 0;\n  //   board.map((array, counter) => {\n  //     return (counter += array.filter(Boolean).length);\n  //   });\n  // };\n  // let sum = (r, a) => r.map(b, i) => a[i] + b;\n  // let trueCount = (board) => {\n  //   return board.map((array) => {\n  //     return array.filter(Boolean).length;\n  //   });\n  // };\n  // let trueCount = (board) => {\n  //   return (\n  //     (sum) =>\n  //       sum.reduce( ()\n  //         board.map((array) => {\n  //           return array.filter(Boolean).length;\n  //         })\n  //       ),\n  //     0\n  //   );\n  // };\n\n\n  let myMbtiCount = trueCount(myMbtiBoard); // console.log(myMbtiCount);\n  // !! MISTYPE COUNT\n  // let mistypeCount = trueCount(mistypeBoardArray[2].board);\n  // console.log(mistypeBoardArray[0]);\n  // let mistypeCountArray = [];\n  // let mistypeCount = mistypeBoardArray.map((board) => {id: board.mbti, count: trueCount(board)})\n  // 각 id는 잘 들어가는데 truecount가 제대로 동작을 안 함. 다 0개라고 나옴.\n  // let mistypeCount = mistypeBoardArray.map((board) => ({\n  //   [board.mbti]: trueCount(board),\n  // }));\n\n  let mistypeCount = mistypeBoardArray.map(item => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board)\n    };\n  }); // console.log(mistypeBoardArray);\n  // console.log(mistypeCount);\n  // let addMistypeCount = (mistypeBoardArray) => {\n  //   let newMistypeBoardArray = [...mistypeBoardArray];\n  //   newMistypeBoardArray.map((board) => {\n  //     board.push(trueCount(board));\n  //   });\n  //   return newMistypeBoardArray;\n  // };\n  // console.log(addMistypeCount);\n  // let addCount = (array) => {\n  //   let newArray = [...array];\n  //   newArray.map((item) => {item.push([item.count]: trueCount(item.board))\n  //   })\n  //   return newArray\n  // }\n  // const realMbti = Math.max.apply(myMbtiCount, testMistypeCountArray);\n  // console.log(realMbti);\n  // const realMbti = Math.max.apply(myMbtiCount, mistypeCount.count);\n  // console.log(mistypeCount.map((item) => item.count));\n\n  console.log([...mistypeCount.map(obj => {\n    return obj.count;\n  })]); // realMbti = Math.max(\n  //   myMbtiCount,\n  //   mistypeCount.map((obj) => {\n  //     return obj.count;\n  //   })\n  // );\n  // console.log(realMbti);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conclusion\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline\",\n        className: \"accent highlight\",\n        children: [myName, \"\\uB2D8\\uC758 \\uC9C4\\uC9DC MBTI\\uB294 \", realMbti, \"\\uC785\\uB2C8\\uB2E4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `images/${realMbti}.png`,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranking\",\n        children: /*#__PURE__*/_jsxDEV(RankingBoard, {\n          ranking: testByRankArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-summary\",\n        children: [\"\\uC54C\\uACE0 \\uBCF4\\uBA74 \", myName, \" \\uB2D8\\uC740 \\uC0AC\\uC2E4 \", myMbti, \"\\uBCF4\\uB2E4 \", realMbti, \"\\uC758 \\uC131\\uD5A5\\uC5D0 \\uB354 \\uAC00\\uAE5D\\uB2E4\\uB294 \\uAC83!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mystery-reveal-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBBF8\\uC2A4\\uD14C\\uB9AC \\uBE59\\uACE0\\uC758 \\uC815\\uCCB4\\uB97C \\uACF5\\uAC1C\\uD569\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [myMbti, \"\\uB4E4\\uC740 \\uC885\\uC885\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mistype-names\",\n          children: myMistypesIds.join(\", \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), \"\\uB4E4\\uACFC\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), \" \\uD63C\\uB3D9\\uB418\\uAE30\\uB3C4 \\uD574\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistype-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-title\",\n        children: [\"\\uBBF8\\uC2A4\\uD14C\\uB9AC \\uBE59\\uACE0 #1 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent highlight\",\n          children: \"ENFP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-reason\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          myMbti: myMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ResultsPage;\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js"],"names":["BingoBoard","Accordion","RankingBoard","ResultsPage","myName","localStorage","getItem","myMbti","myMbtiBoard","JSON","parse","myMistypes","mistypeBoardArray","testByRankArray","mbti","count","myMistypesIds","map","item","id","realMbti","realMbtiCount","trueCount","board","i","length","filter","Boolean","myMbtiCount","mistypeCount","console","log","obj","join"],"mappings":"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","sourcesContent":["import BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\";\n\n// import mbtiimg from \"../images/infp.png\";\n// import mbtiimg from `../images/${realMbti}.png`;\n\n// const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nfunction ResultsPage() {\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(\n    localStorage.getItem(\"mistypeBoardArray\")\n  );\n\n  let testByRankArray = [\n    { mbti: \"INFP\", count: \"18\" },\n    { mbti: \"ISFJ\", count: \"16\" },\n    { mbti: \"ENFP-Fi\", count: \"12\" },\n    { mbti: \"ISFP\", count: \"11\" },\n  ];\n\n  // console.log(mistypeBoardArray);\n\n  // 이거 대신 mistypeboardarray 안에 있는 id 사용하는 게 낫나?\n  let myMistypesIds = myMistypes.map((item) => item.id);\n\n  // // 준우 test data (원래 예상대로인 케이스)\n  // const testMistypeCountArray = [12, 11, 16];\n\n  // // 내 test data (알고보니 다른 케이스)\n  // const myMbtiCount = 15;\n  // const testMistypeCountArray = [17, 8, 9];\n\n  // test data (두가지 선택개수가 똑같은 케이스)\n\n  const realMbti = \"ENFP\";\n  const realMbtiCount = \"test\";\n\n  // 왜 결과값이 아니라 코드가 그대로 출력되지?\n  // let myMbtiCount = (array) => {\n  //   let count = 0;\n  //   for (let i = 0; i < myMbtiBoard.length; i++) {\n  //     count += array[i].filter(Boolean).length;\n  //   }\n  //   return count;\n  // };\n\n  // THIS!!!!\n  let trueCount = (board) => {\n    let count = 0;\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n    return count;\n  };\n\n  // trueCount map으로 쓰는 법?\n\n  // let trueCount = (board) => {\n  //   counter = 0;\n  //   board.map((array, counter) => {\n  //     return (counter += array.filter(Boolean).length);\n  //   });\n  // };\n\n  // let sum = (r, a) => r.map(b, i) => a[i] + b;\n\n  // let trueCount = (board) => {\n  //   return board.map((array) => {\n  //     return array.filter(Boolean).length;\n  //   });\n  // };\n\n  // let trueCount = (board) => {\n  //   return (\n  //     (sum) =>\n  //       sum.reduce( ()\n  //         board.map((array) => {\n  //           return array.filter(Boolean).length;\n  //         })\n  //       ),\n  //     0\n  //   );\n  // };\n\n  let myMbtiCount = trueCount(myMbtiBoard);\n  // console.log(myMbtiCount);\n\n  // !! MISTYPE COUNT\n\n  // let mistypeCount = trueCount(mistypeBoardArray[2].board);\n  // console.log(mistypeBoardArray[0]);\n\n  // let mistypeCountArray = [];\n\n  // let mistypeCount = mistypeBoardArray.map((board) => {id: board.mbti, count: trueCount(board)})\n\n  // 각 id는 잘 들어가는데 truecount가 제대로 동작을 안 함. 다 0개라고 나옴.\n  // let mistypeCount = mistypeBoardArray.map((board) => ({\n  //   [board.mbti]: trueCount(board),\n  // }));\n\n  let mistypeCount = mistypeBoardArray.map((item) => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board),\n    };\n  });\n\n  // console.log(mistypeBoardArray);\n  // console.log(mistypeCount);\n\n  // let addMistypeCount = (mistypeBoardArray) => {\n  //   let newMistypeBoardArray = [...mistypeBoardArray];\n  //   newMistypeBoardArray.map((board) => {\n  //     board.push(trueCount(board));\n  //   });\n  //   return newMistypeBoardArray;\n  // };\n\n  // console.log(addMistypeCount);\n\n  // let addCount = (array) => {\n  //   let newArray = [...array];\n  //   newArray.map((item) => {item.push([item.count]: trueCount(item.board))\n  //   })\n  //   return newArray\n  // }\n\n  // const realMbti = Math.max.apply(myMbtiCount, testMistypeCountArray);\n  // console.log(realMbti);\n\n  // const realMbti = Math.max.apply(myMbtiCount, mistypeCount.count);\n\n  // console.log(mistypeCount.map((item) => item.count));\n\n  console.log([\n    ...mistypeCount.map((obj) => {\n      return obj.count;\n    }),\n  ]);\n\n  // realMbti = Math.max(\n  //   myMbtiCount,\n  //   mistypeCount.map((obj) => {\n  //     return obj.count;\n  //   })\n  // );\n\n  // console.log(realMbti);\n\n  return (\n    <>\n      {/* <h1>결과</h1> */}\n\n      {/* conditional rendering. if myMbti !== realMbti */}\n\n      <div className=\"conclusion\">\n        <div className=\"headline\" className=\"accent highlight\">\n          {myName}님의 진짜 MBTI는 {realMbti}입니다\n        </div>\n        {/* <img src={`../images/${realMbti}.png`} width=\"100%\" /> */}\n        {/* <img src={`../images/infp.png`} width=\"100%\" /> */}\n        {/* <img src={mbtiimg} width=\"300px\" /> */}\n        {/* public folder에 이미지 폴더 넣으면 따로 import 안 해도 불러올 수 있음 */}\n        <img src={`images/${realMbti}.png`} width=\"100%\" />\n        {/* <td>\n          <div className=\"img-container\">\n            <img className=\"top\" src={`images/${realMbti}.png`} width=\"80%\" />\n            <img className=\"bottom\" src={\"images/circle.png\"} width=\"80%\" />\n          </div>\n        </td> */}\n      </div>\n\n      <div className=\"result\">\n        <div className=\"ranking\">\n          <RankingBoard ranking={testByRankArray} />\n        </div>\n        {/* <div className=\"result-count\">\n          각 빙고판에서 {myMbti}는 {myMbtiCount}개, <br />\n          {realMbti}는 {realMbtiCount}개 선택했어요. <br />\n        </div> */}\n        <div className=\"result-summary\">\n          알고 보면 {myName} 님은 사실 {myMbti}보다 {realMbti}의 성향에 더\n          가깝다는 것!\n        </div>\n      </div>\n\n      <div className=\"mystery-reveal-title\">\n        <p>미스테리 빙고의 정체를 공개합니다!</p>\n        <div>\n          {/* {myMbti}들은 종종 {myMistypes.id.join(\", \")}들과 혼동되기도 해요. */}\n          {myMbti}들은 종종{\" \"}\n          <span className=\"mistype-names\">{myMistypesIds.join(\", \")}</span>들과{\" \"}\n          <br></br> 혼동되기도 해요.\n        </div>\n      </div>\n      <div className=\"mistype-container\">\n        <div className=\"mistype-title\">\n          미스테리 빙고 #1 <span className=\"accent highlight\">ENFP</span>\n        </div>\n        {/* <div className=\"mystery-reveal-title\">미스테리 빙고 #1: {mbti}</div> */}\n        {/* <div className=\"bingo-reveal\">\n          <BingoBoard\n            mbti={mistypeBoardArray[0].mbti}\n            board={mistypeBoardArray[0].board}\n            show={true}\n          />\n        </div> */}\n        <div className=\"mistype-reason\">\n          <Accordion myMbti={myMbti} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ResultsPage;\n"]},"metadata":{},"sourceType":"module"}