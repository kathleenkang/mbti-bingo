{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js\";\nimport BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\"; // import mbtiimg from `../images/${realMbti}.png`;\n// const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResultsPage() {\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(localStorage.getItem(\"mistypeBoardArray\")); // console.log(myMbtiBoard);\n  // let testByRankArray = [\n  //   { mbti: \"INFP\", count: \"18\" },\n  //   { mbti: \"ISFJ\", count: \"16\" },\n  //   { mbti: \"ENFP-Fi\", count: \"12\" },\n  //   { mbti: \"ISFP\", count: \"11\" },\n  // ];\n  // 이거 대신 mistypeboardarray 안에 있는 id 사용하는 게 낫나?\n\n  let myMistypesIds = myMistypes.map(item => item.id); // // 준우 test data (원래 예상대로인 케이스)\n  // const testMistypeCountArray = [12, 11, 16];\n  // // 내 test data (알고보니 다른 케이스)\n  // const myMbtiCount = 15;\n  // const testMistypeCountArray = [17, 8, 9];\n  // test data (두가지 선택개수가 똑같은 케이스)\n\n  let trueCount = board => {\n    let count = 0;\n\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n\n    return count;\n  }; // // trueCount map으로 쓰는 법\n  // console.log(\n  //   myMbtiBoard\n  //     .map((row) => row.filter(Boolean).length)\n  //     .reduce((a, b) => a + b, 0)\n  // );\n\n\n  let myMbtiCount = trueCount(myMbtiBoard);\n  let mistypeCount = mistypeBoardArray.map((item, i) => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board)\n    };\n  }); // let mistypeReason = myMistypes.map((item) => item.reason);\n  // console.log(mistypeReason);\n\n  let mbtiRanking = [...mistypeCount, {\n    id: myMbti,\n    count: trueCount(myMbtiBoard)\n  }].sort((a, b) => {\n    return b.count - a.count;\n  }); // 1등한 유형을 realmbti로 놓고\n\n  const realMbti = mbtiRanking[0].id;\n  const realMbtiShort = mbtiRanking[0].id.slice(0, 4);\n  const realMbtiCount = mbtiRanking[0].count;\n\n  let checkType = (myName, myMbti, realMbti, myMbtiCount, realMbtiCount) => {\n    if (myMbtiCount - 5 > realMbtiCount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"first-line\",\n          children: [myMbti, \"\\uAC00 \", myMbtiCount, \"\\uAC1C\\uB85C \\uC555\\uB3C4\\uC801\\uC73C\\uB85C \\uB9CE\\uC558\\uC5B4\\uC694!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"second-line\",\n          children: [myName, \"\\uB2D8\\uC740 \\uC55E\\uAD6C\\uB974\\uAE30 \\uB4B7\\uAD6C\\uB974\\uAE30\\uD558\\uBA74\\uC11C \\uBD10\\uB3C4 \\uC5EC\\uC9C0 \\uC5C6\\uB294 \", myMbti, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"first-line\",\n          children: [myMbti, \"\\uC640 \", realMbtiShort, \" \\uBE59\\uACE0\\uD310\\uC5D0\\uC11C \\uBAA8\\uB450 \\uB3D9\\uC77C\\uD558\\uAC8C \", myMbtiCount, \"\\uAC1C \\uC120\\uD0DD\\uD588\\uC5B4\\uC694.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"second-line\",\n          children: [\"\\uC54C\\uACE0 \\uBCF4\\uB2C8 \", realMbtiShort, \"\\uC77C \\uC218\\uB3C4...?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    } else if (myMbtiCount < realMbtiCount) {\n      // return `각 빙고판에서 ${myMbti}는 ${myMbtiCount}개, ${realMbtiShort}는 ${realMbtiCount}개 선택했어요. 알고 보면 ${myName}님은 ${myMbti}보다 ${realMbtiShort}의 성향에 더 가깝다는\n      // 것!`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"first-line\",\n          children: [\"\\uAC01 \\uBE59\\uACE0\\uD310\\uC5D0\\uC11C \", myMbti, \"\\uB294 \", myMbtiCount, \"\\uAC1C,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), realMbtiShort, \"\\uB294 \", realMbtiCount, \"\\uAC1C \\uC120\\uD0DD\\uD588\\uC5B4\\uC694.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"second-line\",\n          children: [\"\\uC54C\\uACE0 \\uBCF4\\uBA74 \", myName, \"\\uB2D8\\uC740\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), myMbti, \"\\uBCF4\\uB2E4 \", realMbtiShort, \"\\uC758 \\uC131\\uD5A5\\uC5D0 \\uB354 \\uAC00\\uAE5D\\uB2E4\\uB294 \\uAC83!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    } else {\n      return `${myMbtiCount}개로 ${myMbti} 빙고판의 선택 개수가 가장 많았어요. ${myName}님은 원래 예상대로 ${myMbti}일 확률이 높네요`; // return (\n      //   <div>\n      //     <span className=\"first-line\">\n      //     {myMbtiCount}개로 {myMbti} 빙고판의 선택 개수가 가장 많았어요.\n      //     </span>\n      //     <br />\n      //     <span className=\"second-line\">\n      //     {myName}님은 원래 예상대로 {myMbti}일 확률이 높네요\n      //     </span>\n      //   </div>\n      // );\n    }\n  };\n\n  let renderMistypeRevealItem = (item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistype-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-title\",\n        children: [\"MYSTERY BINGO #\", i + 1, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mbti accent highlight\",\n          children: mistypeBoardArray[i].mbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-bingo\",\n        children: /*#__PURE__*/_jsxDEV(BingoBoard, {\n          mbti: mistypeBoardArray[i].mbti.slice(0, 4),\n          board: mistypeBoardArray[i].board,\n          show: true,\n          disableClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistype-reason\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          myMbti: myMbti,\n          mistype: mistypeBoardArray[i].mbti // reason={myMistypes[myMistypes.indexOf({ mistypeBoardArray[i].mbti })].reason}\n          ,\n          myMistypes: myMistypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  };\n\n  console.log(myMbtiBoard);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: myName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), \"\\uB2D8\\uC758\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent highlight\",\n          children: \"\\uC9C4\\uC9DC MBTI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), \"\\uB294\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"myrealmbti accent highlight\",\n          children: realMbti\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), \" \\uC785\\uB2C8\\uB2E4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`../images/${realMbti.toLowerCase().slice(0, 4)}.png`),\n        width: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-summary\",\n        children: checkType(myName, myMbti, realMbti, myMbtiCount, realMbtiCount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mystery-reveal-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDD2E \\uBBF8\\uC2A4\\uD14C\\uB9AC \\uBE59\\uACE0\\uC758\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 24\n          }, this), \" \\uC815\\uCCB4\\uB97C \\uACF5\\uAC1C\\uD569\\uB2C8\\uB2E4!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [myMbti, \"\\uB4E4\\uC740 \\uC885\\uC885\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mistype-names\",\n            children: myMistypesIds.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), \"\\uB4E4\\uACFC \\uD63C\\uB3D9\\uB418\\uAE30\\uB3C4 \\uD574\\uC694.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranking\",\n        children: /*#__PURE__*/_jsxDEV(RankingBoard, {\n          ranking: mbtiRanking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mystery-bingo-reveal\",\n      children: mistypeBoardArray.map(renderMistypeRevealItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"original-bingo\",\n      children: /*#__PURE__*/_jsxDEV(BingoBoard, {\n        mbti: myMbti,\n        board: myMbtiBoard,\n        show: true,\n        disableClick: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ResultsPage;\nexport default ResultsPage;\n{\n  /* <td>\n          <div className=\"img-container\">\n            <img className=\"top\" src={`images/${realMbti}.png`} width=\"80%\" />\n            <img className=\"bottom\" src={\"images/circle.png\"} width=\"80%\" />\n          </div>\n        </td> */\n}\n{\n  /* <div className=\"result-count\">\n          각 빙고판에서 {myMbti}는 {myMbtiCount}개, <br />\n          {realMbti}는 {realMbtiCount}개 선택했어요. <br />\n        </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/kathleenkang/Desktop/mbti/src/pages/ResultsPage.js"],"names":["BingoBoard","Accordion","RankingBoard","ResultsPage","myName","localStorage","getItem","myMbti","myMbtiBoard","JSON","parse","myMistypes","mistypeBoardArray","myMistypesIds","map","item","id","trueCount","board","count","i","length","filter","Boolean","myMbtiCount","mistypeCount","mbti","mbtiRanking","sort","a","b","realMbti","realMbtiShort","slice","realMbtiCount","checkType","renderMistypeRevealItem","console","log","require","toLowerCase","join"],"mappings":"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","sourcesContent":["import BingoBoard from \"../components/BingoBoard\";\nimport \"./ResultsPage.css\";\nimport Accordion from \"../components/Accordion\";\nimport RankingBoard from \"../components/RankingBoard\";\n\n// import mbtiimg from `../images/${realMbti}.png`;\n\n// const myMbtiCount = localStorage.getItem(\"myMbtiCount\")\n\nfunction ResultsPage() {\n  const myName = localStorage.getItem(\"myName\");\n  const myMbti = localStorage.getItem(\"myMbti\");\n  const myMbtiBoard = JSON.parse(localStorage.getItem(\"myMbtiBoard\"));\n  const myMistypes = JSON.parse(localStorage.getItem(\"myMistypes\"));\n  const mistypeBoardArray = JSON.parse(\n    localStorage.getItem(\"mistypeBoardArray\")\n  );\n\n  // console.log(myMbtiBoard);\n\n  // let testByRankArray = [\n  //   { mbti: \"INFP\", count: \"18\" },\n  //   { mbti: \"ISFJ\", count: \"16\" },\n  //   { mbti: \"ENFP-Fi\", count: \"12\" },\n  //   { mbti: \"ISFP\", count: \"11\" },\n  // ];\n\n  // 이거 대신 mistypeboardarray 안에 있는 id 사용하는 게 낫나?\n  let myMistypesIds = myMistypes.map((item) => item.id);\n\n  // // 준우 test data (원래 예상대로인 케이스)\n  // const testMistypeCountArray = [12, 11, 16];\n\n  // // 내 test data (알고보니 다른 케이스)\n  // const myMbtiCount = 15;\n  // const testMistypeCountArray = [17, 8, 9];\n\n  // test data (두가지 선택개수가 똑같은 케이스)\n\n  let trueCount = (board) => {\n    let count = 0;\n    for (let i = 0; i < board.length; i++) {\n      count += board[i].filter(Boolean).length;\n    }\n    return count;\n  };\n\n  // // trueCount map으로 쓰는 법\n  // console.log(\n  //   myMbtiBoard\n  //     .map((row) => row.filter(Boolean).length)\n  //     .reduce((a, b) => a + b, 0)\n  // );\n\n  let myMbtiCount = trueCount(myMbtiBoard);\n\n  let mistypeCount = mistypeBoardArray.map((item, i) => {\n    return {\n      id: item.mbti,\n      count: trueCount(item.board),\n    };\n  });\n\n  // let mistypeReason = myMistypes.map((item) => item.reason);\n  // console.log(mistypeReason);\n\n  let mbtiRanking = [\n    ...mistypeCount,\n    {\n      id: myMbti,\n      count: trueCount(myMbtiBoard),\n    },\n  ].sort((a, b) => {\n    return b.count - a.count;\n  });\n\n  // 1등한 유형을 realmbti로 놓고\n  const realMbti = mbtiRanking[0].id;\n  const realMbtiShort = mbtiRanking[0].id.slice(0, 4);\n  const realMbtiCount = mbtiRanking[0].count;\n\n  let checkType = (myName, myMbti, realMbti, myMbtiCount, realMbtiCount) => {\n    if (myMbtiCount - 5 > realMbtiCount) {\n      return (\n        <div>\n          <span className=\"first-line\">\n            {myMbti}가 {myMbtiCount}개로 압도적으로 많았어요!\n          </span>\n          <br />\n          <span className=\"second-line\">\n            {myName}님은 앞구르기 뒷구르기하면서 봐도 여지 없는 {myMbti}!\n          </span>\n        </div>\n      );\n    } else if (myMbti != realMbti && myMbtiCount == realMbtiCount) {\n      return (\n        <div>\n          <span className=\"first-line\">\n            {myMbti}와 {realMbtiShort} 빙고판에서 모두 동일하게 {myMbtiCount}개\n            선택했어요.\n          </span>\n          <br />\n          <span className=\"second-line\">\n            알고 보니 {realMbtiShort}일 수도...?\n          </span>\n        </div>\n      );\n    } else if (myMbtiCount < realMbtiCount) {\n      // return `각 빙고판에서 ${myMbti}는 ${myMbtiCount}개, ${realMbtiShort}는 ${realMbtiCount}개 선택했어요. 알고 보면 ${myName}님은 ${myMbti}보다 ${realMbtiShort}의 성향에 더 가깝다는\n      // 것!`;\n      return (\n        <div>\n          <span className=\"first-line\">\n            각 빙고판에서 {myMbti}는 {myMbtiCount}개,\n            <br />\n            {realMbtiShort}는 {realMbtiCount}개 선택했어요.\n          </span>\n          <br />\n          <span className=\"second-line\">\n            알고 보면 {myName}님은\n            <br />\n            {myMbti}보다 {realMbtiShort}의 성향에 더 가깝다는 것!\n          </span>\n        </div>\n      );\n    } else {\n      return `${myMbtiCount}개로 ${myMbti} 빙고판의 선택 개수가 가장 많았어요. ${myName}님은 원래 예상대로 ${myMbti}일 확률이 높네요`;\n      // return (\n      //   <div>\n      //     <span className=\"first-line\">\n      //     {myMbtiCount}개로 {myMbti} 빙고판의 선택 개수가 가장 많았어요.\n      //     </span>\n      //     <br />\n      //     <span className=\"second-line\">\n      //     {myName}님은 원래 예상대로 {myMbti}일 확률이 높네요\n      //     </span>\n      //   </div>\n      // );\n    }\n  };\n\n  let renderMistypeRevealItem = (item, i) => {\n    return (\n      <div className=\"mistype-container\">\n        <div className=\"mistype-title\">\n          MYSTERY BINGO #{i + 1}\n          <span className=\"mbti accent highlight\">\n            {mistypeBoardArray[i].mbti}\n          </span>\n        </div>\n        <div className=\"mistype-bingo\">\n          <BingoBoard\n            mbti={mistypeBoardArray[i].mbti.slice(0, 4)}\n            board={mistypeBoardArray[i].board}\n            show={true}\n            disableClick={true}\n          />\n        </div>\n        <div className=\"mistype-reason\">\n          <Accordion\n            myMbti={myMbti}\n            mistype={mistypeBoardArray[i].mbti}\n            // reason={myMistypes[myMistypes.indexOf({ mistypeBoardArray[i].mbti })].reason}\n            myMistypes={myMistypes}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  console.log(myMbtiBoard);\n\n  return (\n    <>\n      {/* conditional rendering. if myMbti !== realMbti */}\n\n      <div className=\"result\">\n        <div className=\"headline\">\n          <span className=\"name\">{myName}</span>님의{\" \"}\n          <span className=\"accent highlight\">진짜 MBTI</span>는<br></br>\n          <span className=\"myrealmbti accent highlight\">{realMbti}</span> 입니다\n        </div>\n        <img\n          src={require(`../images/${realMbti.toLowerCase().slice(0, 4)}.png`)}\n          width=\"300px\"\n        />\n\n        <div className=\"result-summary\">\n          {checkType(myName, myMbti, realMbti, myMbtiCount, realMbtiCount)}\n        </div>\n\n        <div className=\"mystery-reveal-title\">\n          <p>\n            🔮 미스테리 빙고의<br></br> 정체를 공개합니다!\n          </p>\n          <div>\n            {myMbti}들은 종종{\" \"}\n            <span className=\"mistype-names\">{myMistypesIds.join(\", \")}</span>\n            들과 혼동되기도 해요.\n          </div>\n        </div>\n\n        <div className=\"ranking\">\n          <RankingBoard ranking={mbtiRanking} />\n        </div>\n      </div>\n\n      <div className=\"mystery-bingo-reveal\">\n        {mistypeBoardArray.map(renderMistypeRevealItem)}\n      </div>\n\n      <div className=\"original-bingo\">\n        <BingoBoard\n          mbti={myMbti}\n          board={myMbtiBoard}\n          show={true}\n          disableClick={true}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default ResultsPage;\n\n{\n  /* <td>\n          <div className=\"img-container\">\n            <img className=\"top\" src={`images/${realMbti}.png`} width=\"80%\" />\n            <img className=\"bottom\" src={\"images/circle.png\"} width=\"80%\" />\n          </div>\n        </td> */\n}\n\n{\n  /* <div className=\"result-count\">\n          각 빙고판에서 {myMbti}는 {myMbtiCount}개, <br />\n          {realMbti}는 {realMbtiCount}개 선택했어요. <br />\n        </div> */\n}\n"]},"metadata":{},"sourceType":"module"}