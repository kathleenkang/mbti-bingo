!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["React"],t):"object"==typeof exports?exports["react-grid-draw-ui"]=t(require("react")):e["react-grid-draw-ui"]=t(e.React)}(window,(function(e){return function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i(i.s=3)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RectangleManagerUtil=void 0;class r{static addRectangleEndLines(e){e.horizontalPointsSelected.push({startX:e.startX,startY:e.startY+e.height,endX:e.startX+e.width,colour:e.colour}),e.verticalPointsSelected.push({startX:e.startX+e.width,startY:e.startY,endY:e.startY+e.height,colour:e.colour})}static sortRectangleLines(e){e.horizontalPointsSelected.sort((function(e,t){return e.startY-t.startY})),e.verticalPointsSelected.sort((function(e,t){return e.startX-t.startX}))}}t.RectangleManagerUtil=r,r.getShiftRateFromMousePosition=(e,t)=>Math.round(e/t)*t},function(t,i){t.exports=e},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setCreationManagersForHook=t.useGridData=void 0;const r=i(1);let n=null;t.useGridData=()=>{const[e,t]=r.useState(()=>()=>[]),[i,a]=r.useState(),[o,s]=r.useState();return r.useEffect(()=>{if(null==n)throw"Something went wrong with the useGridData hook - If this issue persists, please contact library support.";t(()=>()=>null!=n?n.getItemsWithinRegion():[]),s(()=>e=>null!=n?n.drawRectanglesFromPayload(e):()=>{}),a(()=>()=>null!=n?n.clearDownGrids():()=>{})},[]),null==o||null==i?[e]:[e,i,o]},t.setCreationManagersForHook=e=>{n=e}},function(e,t,i){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&r(t,e,i);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.useGridData=t.ReactGridDrawUI=void 0;const o=a(i(1)),s=i(2);Object.defineProperty(t,"useGridData",{enumerable:!0,get:function(){return s.useGridData}});const l=i(4),c={display:"flex"},d={zIndex:1e4,width:"inherit",position:"absolute"},h=e=>{const t=o.useRef(new l.CanvasManager({lineClickTolerance:e.lineClickTolerance,selectCircleSize:e.selectCircleSize,circleLineShiftSize:e.circleLineShiftSize,contextLineWidth:e.contextLineWidth,lineColour:e.lineColour}));return o.useEffect(()=>{let e=document.getElementById("canvas-wrap");t.current.createCanvas(e.clientWidth,e.clientHeight)},[]),o.default.createElement(o.Fragment,null,o.default.createElement("div",{id:"canvas-wrap",style:c},e.children,o.default.createElement("canvas",{id:"canvas",style:d})))};t.ReactGridDrawUI=h,h.defaultProps={lineClickTolerance:15,selectCircleSize:3,circleLineShiftSize:10,contextLineWidth:1,lineColour:"#1290ff"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CanvasManager=void 0;const r=i(5),n=i(6),a=i(2),o=i(7);t.CanvasManager=class{constructor(e){this.drag=!1,this.activeDragLine={line:{horizontalLine:null,verticalLine:null},gridStartY:0,gridEndY:0,gridStartX:0,gridEndX:0},this.createCanvas=(e,t)=>{this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.setCanvasSize(e,t),this.rectangleCreationManager=new r.RectangleCreationManager(this.canvas,this.ctx,this.lineProperties),this.rectangleBoundaryValidator=new n.RectangleBoundaryValidator(this.canvas,this.lineProperties,this.rectangleCreationManager),this.setUpMouseEvents(),this.setUpKeyboardEvents(),a.setCreationManagersForHook(new o.PublicFunctionManager(this.canvas,this.rectangleCreationManager))},this.setCanvasSize=(e,t)=>{this.canvas.width=e,this.canvas.height=t},this.mouseDown=e=>{let t=e.offsetX,i=e.offsetY;if(!this.rectangleBoundaryValidator.isMouseOnRemoveButtonForAnyGrid(t,i)){let r=this.rectangleBoundaryValidator.getRectForMouseOnBorder(t,i);if(null!=r)this.rectangleCreationManager.drawLineAtClickedGridBoundaryPosition(e,r);else{let e=this.rectangleBoundaryValidator.getGridWhenMouseClickInsideGridRegion(t,i);if(void 0===e)this.rectangleCreationManager.resetBoxProperties(this.currentRect,t,i),this.drag=!0;else{let r=e,n=this.rectangleBoundaryValidator.findHorizontalLineIndexInGridFromMousePosition(r,t,i),a=this.rectangleBoundaryValidator.findVerticalLineIndexInGridFromMousePosition(r,t,i),o=-1!==n,s=-1!==a;(o||s)&&(this.rectangleBoundaryValidator.isLineDeletionModeActive()?o?r.horizontalPointsSelected.splice(n,1):s&&r.verticalPointsSelected.splice(a,1):o?this.activeDragLine.line.horizontalLine=r.horizontalPointsSelected[n]:s&&(this.activeDragLine.line.verticalLine=r.verticalPointsSelected[a]),this.activeDragLine.gridStartX=r.startX,this.activeDragLine.gridStartY=r.startY,this.activeDragLine.gridEndX=r.endX,this.activeDragLine.gridEndY=r.endY)}}}},this.mouseUp=e=>{this.rectangleBoundaryValidator.deleteGridWhenRemoveButtonClicked(e.offsetX,e.offsetY)?this.rectangleCreationManager.clearRegionFromCanvasContext(0,0,this.canvas.width,this.canvas.height):(this.drag&&(this.currentRect.endX=e.offsetX,this.currentRect.endY=e.offsetY,this.rectangleCreationManager.addRectangle(this.currentRect)),this.drag=!1,this.currentRect={startX:0,startY:0,endX:0,endY:0,width:0,height:0,colour:this.lineProperties.lineColour,verticalPointsSelected:[],horizontalPointsSelected:[],undoLineList:[]}),this.rectangleCreationManager.clearRegionFromCanvasContext(0,0,this.canvas.width,this.canvas.height),this.resetActiveGridLineForDragging(),this.drawInteractableGrids(e)},this.mouseMove=e=>{if(this.rectangleCreationManager.clearRegionFromCanvasContext(0,0,this.canvas.width,this.canvas.height),this.drag)this.rectangleCreationManager.drawRectangleFromMouse(this.currentRect,e.offsetX+this.canvas.offsetLeft,e.offsetY+this.canvas.offsetTop);else if(null!=this.activeDragLine.line.horizontalLine){this.activeDragLine.gridStartY<e.offsetY&&this.activeDragLine.gridEndY>e.offsetY&&(this.activeDragLine.line.horizontalLine.startY=e.offsetY)}else if(null!=this.activeDragLine.line.verticalLine){this.activeDragLine.gridStartX<e.offsetX&&this.activeDragLine.gridEndX>e.offsetX&&(this.activeDragLine.line.verticalLine.startX=e.offsetX)}else this.rectangleBoundaryValidator.showMouseCursorAsPointer(e,"auto");this.drawInteractableGrids(e)},this.currentRect={startX:0,startY:0,endX:0,endY:0,width:0,height:0,colour:e.lineColour,horizontalPointsSelected:[],verticalPointsSelected:[],undoLineList:[]},this.rectangleCreationManager=new r.RectangleCreationManager(this.canvas,this.ctx,e),this.rectangleBoundaryValidator=new n.RectangleBoundaryValidator(this.canvas,e,this.rectangleCreationManager),this.lineProperties=e}setUpMouseEvents(){this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1)}setUpKeyboardEvents(){document.addEventListener("keydown",e=>{"Control"==e.key&&this.rectangleBoundaryValidator.setLineDeletionMode(!0)}),document.addEventListener("keyup",e=>{"Control"==e.key&&this.rectangleBoundaryValidator.setLineDeletionMode(!1)})}resetActiveGridLineForDragging(){this.activeDragLine.line={verticalLine:null,horizontalLine:null},this.activeDragLine.gridStartX=0,this.activeDragLine.gridStartY=0,this.activeDragLine.gridEndX=0,this.activeDragLine.gridEndY=0}drawInteractableGrids(e){let t=e.offsetX,i=e.offsetY;this.rectangleCreationManager.getRectangles().forEach(r=>{let n=r.startX+r.width+this.canvas.offsetLeft,a=r.startY+r.height+this.canvas.offsetTop;this.rectangleBoundaryValidator.checkForMouseHoverOnGrid(r,t,i,e),this.render(r,n,a)})}render(e,t,i){this.rectangleCreationManager.drawRectangleFromMouse(e,t,i),this.rectangleCreationManager.drawRectGridLines(e),this.rectangleCreationManager.drawRemoveTableButton(e)}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RectangleCreationManager=void 0;const r=i(0);t.RectangleCreationManager=class{constructor(e,t,i){this.X_CHARACTER="❎",this.drawSelectableCircleOnBoxBoundary=(e,t,i)=>{this.ctx.fillStyle=i,this.ctx.beginPath(),this.ctx.arc(e,t,this.selectCircleSize,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill()},this.drawLineFromBoxBoundaryX=e=>{this.ctx.strokeStyle=e.colour,this.ctx.beginPath(),this.ctx.lineWidth=this.contextLineWidth,this.ctx.moveTo(e.startX,e.startY),this.ctx.lineTo(e.endX,e.startY),this.ctx.closePath(),this.ctx.stroke()},this.drawLineFromBoxBoundaryY=e=>{this.ctx.strokeStyle=e.colour,this.ctx.lineWidth=this.contextLineWidth,this.ctx.beginPath(),this.ctx.moveTo(e.startX,e.startY),this.ctx.lineTo(e.startX,e.endY),this.ctx.closePath(),this.ctx.stroke()},this.resetBoxProperties=(e,t,i)=>{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),e.startX=t,e.startY=i},this.canvas=e,this.ctx=t,this.lineClickTolerance=i.lineClickTolerance,this.selectCircleSize=i.selectCircleSize,this.contextLineWidth=i.contextLineWidth,this.circleLineShiftSize=i.circleLineShiftSize,this.rectangles=[]}drawRectangleFromMouse(e,t,i){e.width=t-this.canvas.offsetLeft-e.startX,e.height=i-this.canvas.offsetTop-e.startY,this.drawRectangleWithColour(e)}drawRectangleWithColour(e){this.ctx.strokeStyle=e.colour,this.ctx.lineWidth=this.contextLineWidth,this.ctx.strokeRect(e.startX,e.startY,e.width,e.height)}clearRegionFromCanvasContext(e,t,i,r){this.ctx.clearRect(e,t,i,r)}drawRemoveTableButton(e){this.ctx.font="1em Roboto",e.startX<=e.endX&&e.startY<=e.endY?this.ctx.fillText(this.X_CHARACTER,e.startX+e.width-20,e.startY-10):e.startX<=e.endX&&e.startY>e.endY?this.ctx.fillText(this.X_CHARACTER,e.startX+e.width-20,e.endY-10):e.startX>e.endX&&e.startY<=e.endY?this.ctx.fillText(this.X_CHARACTER,e.startX-20,e.startY-10):e.startX>e.endX&&e.startY>e.endY&&this.ctx.fillText(this.X_CHARACTER,e.startX-20,e.endY-10)}drawLineAtClickedGridBoundaryPosition(e,t){let i=t.height+t.startY,r=t.width+t.startX,n=e.offsetX,a=e.offsetY,o=Math.abs(n-t.startX)<this.lineClickTolerance,s=Math.abs(n-r)<this.lineClickTolerance,l=Math.abs(a-t.startY)<this.lineClickTolerance,c=Math.abs(a-i)<this.lineClickTolerance;o||s?this.addHorizontalLineAtMousePosition(t.startX,a,r,t):(l||c)&&this.addVerticalLineAtMousePosition(n,t.startY,i,t)}getRectangles(){return this.rectangles}addRectangle(e){this.rectangles.push(e)}removeRectangle(e){this.rectangles.splice(e,1)}clearDownGrids(){this.rectangles=[]}drawRectGridLines(e){e.horizontalPointsSelected.forEach(e=>{this.drawLineFromBoxBoundaryX(e)}),e.verticalPointsSelected.forEach(e=>{this.drawLineFromBoxBoundaryY(e)})}addVerticalLineAtMousePosition(e,t,i,n){let a={startX:r.RectangleManagerUtil.getShiftRateFromMousePosition(e,this.circleLineShiftSize),startY:t,endY:i,colour:n.colour};n.verticalPointsSelected.push(a),this.drawLineFromBoxBoundaryY(a),n.undoLineList.push(!1)}addHorizontalLineAtMousePosition(e,t,i,n){let a={startX:e,startY:r.RectangleManagerUtil.getShiftRateFromMousePosition(t,this.circleLineShiftSize),endX:i,colour:n.colour};n.horizontalPointsSelected.push(a),n.undoLineList.push(!0),this.drawLineFromBoxBoundaryX(a)}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RectangleBoundaryValidator=void 0;const r=i(0);t.RectangleBoundaryValidator=class{constructor(e,t,i){this.NO_INDEX_FOUND=-1,this.lineDeletionModeActive=!1,this.getGridWhenMouseClickInsideGridRegion=(e,t)=>this.rectangleCreationManager.getRectangles().find(i=>Math.abs(e)>=i.startX&&Math.abs(e)<=i.width+i.startX&&Math.abs(t)>=i.startY&&Math.abs(t)<=i.height+i.startY),this.findHorizontalLineIndexInGridFromMousePosition=(e,t,i)=>e.horizontalPointsSelected.findIndex(e=>{let r=t>e.startX&&t<e.endX,n=Math.abs(i-e.startY)<5;return r&&n}),this.findVerticalLineIndexInGridFromMousePosition=(e,t,i)=>e.verticalPointsSelected.findIndex(e=>{let r=i>e.startY&&i<e.endY,n=Math.abs(t-e.startX)<5;return r&&n}),this.isMouseOnRemoveGridButton=(e,t,i)=>{let r=e.startY-30,n=e.startY-5,a=e.endX-20,o=a+20;return e.startX<=e.endX&&e.startY<=e.endY?t>=a&&t<=o&&i>=r&&i<=n:e.startX<=e.endX&&e.startY>e.endY?t>=a&&t<=o&&i>=e.endY-30&&i<=e.endY-5:e.startX>e.endX&&e.startY<=e.endY?t>=e.startX-20&&t<=e.startX+20&&i>=r&&i<=n:e.startX>e.endX&&e.startY>e.endY?t>=e.startX-20&&t<=e.startX+20&&i>=e.endY-30&&i<=e.endY-5:void 0},this.showCircleAndLineForMouseHoverOnBoundary=(e,t,i)=>{let r=e.startY,n=e.startX,a=e.height+r,o=e.width+n,s=Math.abs(t-n)<this.lineClickTolerance,l=Math.abs(t-o)<this.lineClickTolerance,c=Math.abs(i-r)<this.lineClickTolerance,d=Math.abs(i-a)<this.lineClickTolerance;s&&i>e.startY&&i<=e.startY+e.height?this.previewCircleAndLineForLeftBorderOnHover(i,n,o,e.colour):l&&i>e.startY&&i<=e.startY+e.height?this.previewCircleAndLineForRightBorderOnHover(i,n,o,e.colour):c&&t>e.startX&&t<=e.startX+e.width?this.previewCircleAndLineForTopBorderOnHover(t,r,a,e.colour):d&&t>e.startX&&t<=e.startX+e.width&&this.previewCircleAndLineForBottomBorderOnHover(t,a,r,e.colour)},this.canvas=e,this.lineClickTolerance=t.lineClickTolerance,this.selectCircleSize=t.selectCircleSize,this.circleLineShiftSize=t.circleLineShiftSize,this.contextLineWidth=t.contextLineWidth,this.rectangleCreationManager=i}deleteGridWhenRemoveButtonClicked(e,t){let i=!1;return this.rectangleCreationManager.getRectangles().forEach((r,n)=>{this.isMouseOnRemoveGridButton(r,e,t)&&(this.rectangleCreationManager.removeRectangle(n),i=!0)}),i}isMouseOnRemoveButtonForAnyGrid(e,t){let i=!1;return this.rectangleCreationManager.getRectangles().forEach(r=>{this.isMouseOnRemoveGridButton(r,e,t)&&(i=!0)}),i}getRectForMouseOnBorder(e,t){return this.rectangleCreationManager.getRectangles().find(i=>this.checkForMouseOnBorderOfGrid(i,e,t))}checkForMouseHoverOnGrid(e,t,i,r){if(this.checkForMouseOnBorderOfGrid(e,t,i))this.showMouseCursorAsPointer(r,"pointer"),this.showCircleAndLineForMouseHoverOnBoundary(e,t,i);else if(this.isMouseOnRemoveGridButton(e,t,i))this.showMouseCursorAsPointer(r,"pointer");else{let n=this.findHorizontalLineIndexInGridFromMousePosition(e,t,i),a=this.findVerticalLineIndexInGridFromMousePosition(e,t,i);n!=this.NO_INDEX_FOUND||a!=this.NO_INDEX_FOUND?this.handleDeletionModeHoverAction(e,n,a,r):this.repaintLinesGridColouration(e)}}repaintLinesGridColouration(e){e.horizontalPointsSelected.forEach(t=>t.colour=e.colour),e.verticalPointsSelected.forEach(t=>t.colour=e.colour)}handleDeletionModeHoverAction(e,t,i,r){if(this.lineDeletionModeActive){if(t!=this.NO_INDEX_FOUND){e.horizontalPointsSelected[t].colour="#FF0000"}else if(i!=this.NO_INDEX_FOUND){e.verticalPointsSelected[i].colour="#FF0000"}this.showMouseCursorAsPointer(r,"pointer")}else this.showMouseCursorAsPointer(r,"grab")}showMouseCursorAsPointer(e,t){e.target.style.cursor=t}setLineDeletionMode(e){this.lineDeletionModeActive=e}isLineDeletionModeActive(){return this.lineDeletionModeActive}previewCircleAndLineForBottomBorderOnHover(e,t,i,n){let a=r.RectangleManagerUtil.getShiftRateFromMousePosition(e,this.circleLineShiftSize),o={startX:a,startY:t,endY:i,colour:n};this.rectangleCreationManager.drawSelectableCircleOnBoxBoundary(a,t,n),this.rectangleCreationManager.drawLineFromBoxBoundaryY(o)}previewCircleAndLineForTopBorderOnHover(e,t,i,n){let a=r.RectangleManagerUtil.getShiftRateFromMousePosition(e,this.circleLineShiftSize),o={startX:a,startY:t,endY:i,colour:n};this.rectangleCreationManager.drawSelectableCircleOnBoxBoundary(a,t,n),this.rectangleCreationManager.drawLineFromBoxBoundaryY(o)}previewCircleAndLineForRightBorderOnHover(e,t,i,n){let a=r.RectangleManagerUtil.getShiftRateFromMousePosition(e,this.circleLineShiftSize),o={startX:t,startY:a,endX:i,colour:n};this.rectangleCreationManager.drawSelectableCircleOnBoxBoundary(i,a,n),this.rectangleCreationManager.drawLineFromBoxBoundaryX(o)}previewCircleAndLineForLeftBorderOnHover(e,t,i,n){let a=r.RectangleManagerUtil.getShiftRateFromMousePosition(e,this.circleLineShiftSize),o={startX:t,startY:a,endX:i,colour:n};this.rectangleCreationManager.drawSelectableCircleOnBoxBoundary(t,a,n),this.rectangleCreationManager.drawLineFromBoxBoundaryX(o)}checkForMouseOnBorderOfGrid(e,t,i){let r=e.startY,n=e.startX,a=e.height+r,o=e.width+n,s=Math.abs(t-n)<=this.lineClickTolerance||Math.abs(t-o)<=this.lineClickTolerance,l=Math.abs(i-r)<=this.lineClickTolerance||Math.abs(i-a)<=this.lineClickTolerance;return s&&(i>=r&&i<=a)||l&&(t>=n&&t<=o)}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PublicFunctionManager=void 0;const r=i(0);t.PublicFunctionManager=class{constructor(e,t){this.CANVAS_WRAP_ID="canvas-wrap",this.getItemsWithinRegion=()=>{let e=document.getElementById(this.CANVAS_WRAP_ID);if(null==e)throw"Could not find DOM element with ID: "+this.CANVAS_WRAP_ID;let t=[];return this.rectangleCreationManager.getRectangles().forEach(i=>{r.RectangleManagerUtil.sortRectangleLines(i),r.RectangleManagerUtil.addRectangleEndLines(i);let n=this.buildTableShape(i.horizontalPointsSelected.length,i.verticalPointsSelected.length);this.buildTableRowsFromDrawnGrid(e,i,n),i.horizontalPointsSelected.pop(),i.verticalPointsSelected.pop(),t.push(n)}),t},this.drawRectanglesFromPayload=e=>{e.forEach(e=>{this.rectangleCreationManager.drawRectangleWithColour(e),this.rectangleCreationManager.addRectangle(e),this.rectangleCreationManager.drawRectGridLines(e),this.rectangleCreationManager.drawRemoveTableButton(e)})},this.clearDownGrids=()=>{this.rectangleCreationManager.clearDownGrids(),this.rectangleCreationManager.resetBoxProperties({},0,0)},this.buildTableShape=(e,t)=>{let i=[];for(let r=0;r<e;r++)for(let n=0;n<t;n++)null!=i[r]?i[r].push(""):i[r]=0!==e||0!==t?[""]:[];return i},this.findGridPosition=(e,t,i,r)=>{let n=0,a=0;if(0===i.length)for(let t=0;t<r.length;t++){e<r[t].startX?(a=0,n=t):n++}else if(0===r.length)for(let e=0;e<i.length;e++){t<i[e].startY?(a=e,n=0):a++}else for(let n=0;n<i.length;n++){let a=i[n].startY;for(let i=0;i<r.length;i++){if(e<r[i].startX&&t<a)return[n,i]}}return[a,n]},this.isItemInsideBox=(e,t,i,r)=>{let n=t.offsetHeight/2;return i>=e.startX&&i<=e.width+e.startX&&r+n>=e.startY&&r+n<=e.height+e.startY},this.canvas=e,this.rectangleCreationManager=t,this.canvasRect=this.canvas.getBoundingClientRect()}buildTableRowsFromDrawnGrid(e,t,i){let r=e.childNodes;if(r.length>1)r.forEach(e=>this.buildTableRowsFromDrawnGrid(e,t,i));else if(1==r.length){let e=r[0],n=e.getBoundingClientRect(),a=n.left-this.canvasRect.left+window.scrollX,o=n.top-this.canvasRect.top+window.scrollY;this.isItemInsideBox(t,e,a,o)&&this.addGridItemToTable(a,o,t,i,e)}}addGridItemToTable(e,t,i,r,n){let a=this.findGridPosition(e,t,i.horizontalPointsSelected,i.verticalPointsSelected),o=a[0],s=a[1];if(null!=r[o]){let e=r[o][s],t=""!=e&&null!=e;r[o][s]=t?r[o][s]+" "+n.innerText:n.innerText}else r[o]=[]}}}])}));